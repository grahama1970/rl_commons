{"created": 1749079896.174549, "duration": 33.88401746749878, "exitcode": 1, "root": "/home/graham/workspace/experiments/rl_commons", "environment": {}, "summary": {"passed": 108, "failed": 48, "skipped": 1, "total": 157, "collected": 157}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_discrete", "type": "Function", "lineno": 19}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_continuous", "type": "Function", "lineno": 41}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_a3c_config", "type": "Function", "lineno": 63}]}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_agent_initialization", "type": "Function", "lineno": 80}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_discrete", "type": "Function", "lineno": 94}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_continuous", "type": "Function", "lineno": 115}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_save_load", "type": "Function", "lineno": 137}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_metrics", "type": "Function", "lineno": 169}]}, {"nodeid": "tests/algorithms/a3c/test_a3c.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents", "type": "Class"}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent", "type": "Class"}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::test_a3c_integration", "type": "Function", "lineno": 186}]}, {"nodeid": "tests/algorithms/a3c/test_a3c_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c_simple.py::test_a3c_components", "type": "Function", "lineno": 15}]}, {"nodeid": "tests/algorithms/a3c", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py", "type": "Module"}, {"nodeid": "tests/algorithms/a3c/test_a3c_simple.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/bandits", "outcome": "passed", "result": []}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_creation", "type": "Function", "lineno": 34}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_difficulty_validation", "type": "Function", "lineno": 48}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_serialization", "type": "Function", "lineno": 56}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_performance_recording", "type": "Function", "lineno": 79}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_global_performance", "type": "Function", "lineno": 99}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_readiness_score", "type": "Function", "lineno": 110}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_automatic_task_generation", "type": "Function", "lineno": 131}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_performance_based_selection", "type": "Function", "lineno": 147}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_task_generator_integration", "type": "Function", "lineno": 165}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_smooth_progression", "type": "Function", "lineno": 187}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_zone_of_proximal_development", "type": "Function", "lineno": 225}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_mastery_tracking", "type": "Function", "lineno": 241}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_learner_profile_update", "type": "Function", "lineno": 262}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_performance_prediction", "type": "Function", "lineno": 294}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_adaptive_parameters", "type": "Function", "lineno": 315}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_task_generation", "type": "Function", "lineno": 335}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_curriculum_integration", "type": "Function", "lineno": 363}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_domain_adaptation", "type": "Function", "lineno": 390}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_update_scheduling", "type": "Function", "lineno": 410}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_curriculum_with_real_agent", "type": "Function", "lineno": 437}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_module_orchestration_scenario", "type": "Function", "lineno": 493}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration", "type": "Class"}]}, {"nodeid": "tests/algorithms/curriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/dqn", "outcome": "passed", "result": []}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_module_graph_forward", "type": "Function", "lineno": 155}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_dynamic_graph", "type": "Function", "lineno": 215}]}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration::test_gnn_dqn_learning", "type": "Function", "lineno": 312}]}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot::test_static_graph", "type": "Function", "lineno": 406}]}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration", "type": "Class"}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration", "type": "Class"}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/gnn", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/hierarchical", "outcome": "passed", "result": []}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_learn_module_routing", "type": "Function", "lineno": 102}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_reward_function_properties", "type": "Function", "lineno": 160}]}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_imitate_routing_policy", "type": "Function", "lineno": 209}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_continuous_action_cloning", "type": "Function", "lineno": 280}]}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL::test_discriminator_training", "type": "Function", "lineno": 327}]}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_wrong_action_space", "type": "Function", "lineno": 404}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_empty_demonstrations", "type": "Function", "lineno": 420}]}, {"nodeid": "tests/algorithms/irl/test_irl.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL", "type": "Class"}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning", "type": "Class"}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL", "type": "Class"}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/irl", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_multi_agent_coordination", "type": "Function", "lineno": 235}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_agent_communication", "type": "Function", "lineno": 366}]}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot::test_fake_multi_agent", "type": "Function", "lineno": 493}]}, {"nodeid": "tests/algorithms/marl/test_coordination.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination", "type": "Class"}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/marl", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_few_shot_adaptation", "type": "Function", "lineno": 104}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_meta_training", "type": "Function", "lineno": 198}]}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent::test_maml_agent_adaptation", "type": "Function", "lineno": 284}]}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot::test_no_adaptation", "type": "Function", "lineno": 365}]}, {"nodeid": "tests/algorithms/meta/test_maml.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML", "type": "Class"}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent", "type": "Class"}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/meta", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_as_objective", "type": "Function", "lineno": 15}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_pareto_with_entropy", "type": "Function", "lineno": 65}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_weight_adaptation", "type": "Function", "lineno": 126}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_preference_balance", "type": "Function", "lineno": 181}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_metrics_reporting", "type": "Function", "lineno": 219}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_fake_ignore_entropy", "type": "Function", "lineno": 264}]}, {"nodeid": "tests/algorithms/morl", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_cartpole_training", "type": "Function", "lineno": 17}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_gradient_detachment", "type": "Function", "lineno": 124}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_fake_instant_convergence", "type": "Function", "lineno": 167}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_asymmetric_clipping", "type": "Function", "lineno": 197}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_adaptive_entropy_coefficient", "type": "Function", "lineno": 217}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_entropy_preservation", "type": "Function", "lineno": 253}]}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_penalty", "type": "Function", "lineno": 17}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_entropy_preservation", "type": "Function", "lineno": 89}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_fake_zero_kl", "type": "Function", "lineno": 145}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_scaling_by_covariance", "type": "Function", "lineno": 186}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_dynamic_kl_adaptation", "type": "Function", "lineno": 240}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_comparison_with_clip_cov", "type": "Function", "lineno": 291}]}, {"nodeid": "tests/algorithms/ppo/test_ppo.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_continuous", "type": "Function", "lineno": 10}, {"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_discrete", "type": "Function", "lineno": 70}]}, {"nodeid": "tests/algorithms/ppo", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py", "type": "Module"}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py", "type": "Module"}, {"nodeid": "tests/algorithms/ppo/test_ppo.py", "type": "Module"}]}, {"nodeid": "tests/algorithms", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c", "type": "Package"}, {"nodeid": "tests/algorithms/bandits", "type": "Package"}, {"nodeid": "tests/algorithms/curriculum", "type": "Package"}, {"nodeid": "tests/algorithms/dqn", "type": "Package"}, {"nodeid": "tests/algorithms/gnn", "type": "Package"}, {"nodeid": "tests/algorithms/hierarchical", "type": "Package"}, {"nodeid": "tests/algorithms/irl", "type": "Package"}, {"nodeid": "tests/algorithms/marl", "type": "Package"}, {"nodeid": "tests/algorithms/meta", "type": "Package"}, {"nodeid": "tests/algorithms/morl", "type": "Dir"}, {"nodeid": "tests/algorithms/ppo", "type": "Package"}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_result_creation", "type": "Function", "lineno": 35}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_creation", "type": "Function", "lineno": 55}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_custom_benchmark", "type": "Function", "lineno": 62}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_execution", "type": "Function", "lineno": 86}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_comparison", "type": "Function", "lineno": 116}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_report_generation", "type": "Function", "lineno": 149}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_algorithm_benchmark_setup", "type": "Function", "lineno": 181}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_multi_objective_benchmark", "type": "Function", "lineno": 201}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_scalability_benchmark", "type": "Function", "lineno": 215}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks::test_module_orchestration_benchmark", "type": "Function", "lineno": 235}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_basic_profiling", "type": "Function", "lineno": 260}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_nested_profiling", "type": "Function", "lineno": 278}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_bottleneck_analysis", "type": "Function", "lineno": 295}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_report_generation", "type": "Function", "lineno": 321}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite", "type": "Class"}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks", "type": "Class"}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks", "type": "Class"}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler", "type": "Class"}]}, {"nodeid": "tests/benchmarks", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py", "type": "Module"}]}, {"nodeid": "tests/cli", "outcome": "passed", "result": []}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_creation", "type": "Function", "lineno": 35}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_serialization", "type": "Function", "lineno": 50}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_module_context", "type": "Function", "lineno": 74}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_update", "type": "Function", "lineno": 90}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_score", "type": "Function", "lineno": 129}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_selector_initialization", "type": "Function", "lineno": 168}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_registration", "type": "Function", "lineno": 175}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_task_property_extraction", "type": "Function", "lineno": 208}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_discrete", "type": "Function", "lineno": 224}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_continuous", "type": "Function", "lineno": 241}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_force_algorithm_selection", "type": "Function", "lineno": 258}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_recommendations", "type": "Function", "lineno": 269}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_performance_tracking", "type": "Function", "lineno": 291}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_switching", "type": "Function", "lineno": 322}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_save_load_performance_history", "type": "Function", "lineno": 346}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_statistics", "type": "Function", "lineno": 383}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_create_module_context", "type": "Function", "lineno": 413}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_extract_module_characteristics", "type": "Function", "lineno": 425}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_module_aware_selection", "type": "Function", "lineno": 449}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_empty_algorithm_registry", "type": "Function", "lineno": 481}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_invalid_force_algorithm", "type": "Function", "lineno": 492}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_performance_with_zero_episodes", "type": "Function", "lineno": 501}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_task_hash_consistency", "type": "Function", "lineno": 511}]}, {"nodeid": "tests/core/test_algorithm_selector.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases", "type": "Class"}]}, {"nodeid": "tests/core/test_base.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_base.py::test_rl_state_creation", "type": "Function", "lineno": 7}, {"nodeid": "tests/core/test_base.py::test_rl_action_creation", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/test_base.py::test_rl_reward_creation", "type": "Function", "lineno": 36}, {"nodeid": "tests/core/test_base.py::test_replay_buffer", "type": "Function", "lineno": 49}]}, {"nodeid": "tests/core/test_covariance_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_covariance_analyzer.py::test_covariance_calculation", "type": "Function", "lineno": 11}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_percentile_threshold", "type": "Function", "lineno": 42}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_fake_all_high_cov", "type": "Function", "lineno": 86}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_torch_tensor_support", "type": "Function", "lineno": 105}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_adaptive_threshold", "type": "Function", "lineno": 121}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_distribution_analysis", "type": "Function", "lineno": 139}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_history_tracking", "type": "Function", "lineno": 165}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_real_rl_scenario", "type": "Function", "lineno": 185}]}, {"nodeid": "tests/core/test_entropy_aware_selector.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_aware_selection", "type": "Function", "lineno": 16}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_health_tracking", "type": "Function", "lineno": 85}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_algorithm_switching", "type": "Function", "lineno": 127}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_intervention_recommendations", "type": "Function", "lineno": 190}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_statistics", "type": "Function", "lineno": 234}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_fake_always_healthy", "type": "Function", "lineno": 273}]}, {"nodeid": "tests/core", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py", "type": "Module"}, {"nodeid": "tests/core/test_base.py", "type": "Module"}, {"nodeid": "tests/core/test_covariance_analyzer.py", "type": "Module"}, {"nodeid": "tests/core/test_entropy_aware_selector.py", "type": "Module"}]}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimizer_initialization", "type": "Function", "lineno": 16}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_state_creation", "type": "Function", "lineno": 29}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_parameter_normalization", "type": "Function", "lineno": 55}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimization_step", "type": "Function", "lineno": 76}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_calculation", "type": "Function", "lineno": 106}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_with_degradation", "type": "Function", "lineno": 142}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_full_optimization_loop", "type": "Function", "lineno": 179}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_save_load_model", "type": "Function", "lineno": 226}]}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer", "type": "Class"}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::test_integration_validation", "type": "Function", "lineno": 261}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_registration", "type": "Function", "lineno": 24}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_orchestrator_creation", "type": "Function", "lineno": 48}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_state_update", "type": "Function", "lineno": 69}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_request_routing", "type": "Function", "lineno": 95}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_performance_tracking", "type": "Function", "lineno": 145}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_objective_orchestration", "type": "Function", "lineno": 185}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_should_rebalance", "type": "Function", "lineno": 201}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_async_request_handling", "type": "Function", "lineno": 242}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_curriculum_creation", "type": "Function", "lineno": 276}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_agent_setup", "type": "Function", "lineno": 289}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_gnn_orchestrator", "type": "Function", "lineno": 300}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_integration_statistics", "type": "Function", "lineno": 310}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_to_features", "type": "Function", "lineno": 335}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_is_available", "type": "Function", "lineno": 358}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest::test_matches_capabilities", "type": "Function", "lineno": 391}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_e2e_pdf_processing_pipeline", "type": "Function", "lineno": 428}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_algorithm_switching", "type": "Function", "lineno": 527}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration", "type": "Class"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState", "type": "Class"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest", "type": "Class"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration", "type": "Class"}]}, {"nodeid": "tests/integrations", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_arangodb_optimizer.py", "type": "Module"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py", "type": "Module"}]}, {"nodeid": "tests/monitoring/test_entropy_tracker.py", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_entropy_tracker.py::test_ppo_entropy_tracking", "type": "Function", "lineno": 48}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_collapse_detection", "type": "Function", "lineno": 135}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_fake_constant_entropy", "type": "Function", "lineno": 180}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_metrics_calculation", "type": "Function", "lineno": 205}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_recovery_recommendations", "type": "Function", "lineno": 224}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_persistence", "type": "Function", "lineno": 249}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_real_ppo_integration", "type": "Function", "lineno": 282}]}, {"nodeid": "tests/monitoring", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_entropy_tracker.py", "type": "Module"}]}, {"nodeid": "tests/safety", "outcome": "passed", "result": []}, {"nodeid": "tests/utils", "outcome": "passed", "result": []}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/algorithms", "type": "Package"}, {"nodeid": "tests/benchmarks", "type": "Package"}, {"nodeid": "tests/cli", "type": "Package"}, {"nodeid": "tests/core", "type": "Package"}, {"nodeid": "tests/integrations", "type": "Package"}, {"nodeid": "tests/monitoring", "type": "Package"}, {"nodeid": "tests/safety", "type": "Package"}, {"nodeid": "tests/utils", "type": "Package"}]}], "tests": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_discrete", "lineno": 19, "outcome": "passed", "keywords": ["test_actor_critic_network_discrete", "TestA3CComponents", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0006360029801726341, "outcome": "passed"}, "call": {"duration": 0.009521674830466509, "outcome": "passed"}, "teardown": {"duration": 0.0001343931071460247, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_continuous", "lineno": 41, "outcome": "passed", "keywords": ["test_actor_critic_network_continuous", "TestA3CComponents", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011901184916496277, "outcome": "passed"}, "call": {"duration": 0.0016499240882694721, "outcome": "passed"}, "teardown": {"duration": 0.00010890187695622444, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_a3c_config", "lineno": 63, "outcome": "passed", "keywords": ["test_a3c_config", "TestA3CComponents", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.833183139562607e-05, "outcome": "passed"}, "call": {"duration": 0.00010978197678923607, "outcome": "passed"}, "teardown": {"duration": 9.009195491671562e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_agent_initialization", "lineno": 80, "outcome": "passed", "keywords": ["test_agent_initialization", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011325208470225334, "outcome": "passed"}, "call": {"duration": 1.0898791928775609, "outcome": "passed"}, "teardown": {"duration": 0.00014302320778369904, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_discrete", "lineno": 94, "outcome": "passed", "keywords": ["test_action_selection_discrete", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.9922064691782e-05, "outcome": "passed"}, "call": {"duration": 0.009468315169215202, "outcome": "passed"}, "teardown": {"duration": 0.00010522222146391869, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_continuous", "lineno": 115, "outcome": "passed", "keywords": ["test_action_selection_continuous", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.354203939437866e-05, "outcome": "passed"}, "call": {"duration": 0.010345962829887867, "outcome": "passed"}, "teardown": {"duration": 0.00011161202564835548, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_save_load", "lineno": 137, "outcome": "failed", "keywords": ["test_save_load", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010813167318701744, "outcome": "passed"}, "call": {"duration": 0.0005147997289896011, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/base.py", "lineno": 106, "message": "AttributeError: 'A3CConfig' object has no attribute 'get'"}, "longrepr": "E   AttributeError: 'A3CConfig' object has no attribute 'get'"}, "teardown": {"duration": 0.00011418294161558151, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_metrics", "lineno": 169, "outcome": "failed", "keywords": ["test_metrics", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010692235082387924, "outcome": "passed"}, "call": {"duration": 0.00015100324526429176, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/base.py", "lineno": 106, "message": "AttributeError: 'A3CConfig' object has no attribute 'get'"}, "longrepr": "E   AttributeError: 'A3CConfig' object has no attribute 'get'"}, "teardown": {"duration": 0.00011752219870686531, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::test_a3c_integration", "lineno": 186, "outcome": "passed", "keywords": ["test_a3c_integration", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011209165677428246, "outcome": "passed"}, "call": {"duration": 0.003913440275937319, "outcome": "passed", "stdout": "============================================================\n\ud83e\uddea A3C INTEGRATION TEST\n============================================================\n\n\ud83d\udccb Test 1: CartPole training with A3C\n\u274c FAIL: 'A3CConfig' object has no attribute 'get'\n\n\ud83d\udccb Test 2: Continuous action space (Pendulum)\n\u274c FAIL: 'A3CConfig' object has no attribute 'get'\n\n============================================================\nTotal: 2, Passed: 0, Failed: 2\n\n\u274c FAILURES:\n  - Test 1: 'A3CConfig' object has no attribute 'get'\n  - Test 2: 'A3CConfig' object has no attribute 'get'\n"}, "teardown": {"duration": 0.00011588260531425476, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c_simple.py::test_a3c_components", "lineno": 15, "outcome": "passed", "keywords": ["test_a3c_components", "test_a3c_simple.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011836271733045578, "outcome": "passed"}, "call": {"duration": 0.048442216124385595, "outcome": "passed", "stdout": "============================================================\n\ud83e\uddea A3C COMPONENT TESTS\n============================================================\n\n\ud83d\udccb Test 1: Actor-Critic Network (Discrete Actions)\n\u2705 PASS - Network output shapes correct\n\n\ud83d\udccb Test 2: Actor-Critic Network (Continuous Actions)\n\u2705 PASS - Continuous network output shapes correct\n\n\ud83d\udccb Test 3: A3C Agent Creation\n\u274c FAIL: 'A3CConfig' object has no attribute 'get'\n\n\ud83d\udccb Test 4: Discrete Action Selection\n\u2705 PASS - Selected discrete action: 0\n\n\ud83d\udccb Test 5: Continuous Action Selection\n\u2705 PASS - Selected continuous action: [0.06754705309867859, -1.094239592552185]\n\n\ud83d\udccb Test 6: Save/Load Functionality\n\u2705 PASS - Save/load works correctly\n\n============================================================\nTotal: 6, Passed: 5, Failed: 1\n\n\u274c FAILURES:\n  - Test 3: 'A3CConfig' object has no attribute 'get'\n"}, "teardown": {"duration": 0.00013487273827195168, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_creation", "lineno": 34, "outcome": "passed", "keywords": ["test_task_creation", "TestTask", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0003699171356856823, "outcome": "passed"}, "call": {"duration": 0.00013544317334890366, "outcome": "passed"}, "teardown": {"duration": 9.941216558218002e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_difficulty_validation", "lineno": 48, "outcome": "passed", "keywords": ["test_task_difficulty_validation", "TestTask", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001222626306116581, "outcome": "passed"}, "call": {"duration": 0.00021562492474913597, "outcome": "passed"}, "teardown": {"duration": 9.974231943488121e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_serialization", "lineno": 56, "outcome": "passed", "keywords": ["test_task_serialization", "TestTask", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010615261271595955, "outcome": "passed"}, "call": {"duration": 0.00013843271881341934, "outcome": "passed"}, "teardown": {"duration": 0.00010095210745930672, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_performance_recording", "lineno": 79, "outcome": "passed", "keywords": ["test_performance_recording", "TestPerformanceTracker", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010188203305006027, "outcome": "passed"}, "call": {"duration": 0.00016497308388352394, "outcome": "passed"}, "teardown": {"duration": 9.657209739089012e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_global_performance", "lineno": 99, "outcome": "passed", "keywords": ["test_global_performance", "TestPerformanceTracker", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011501181870698929, "outcome": "passed"}, "call": {"duration": 0.0002256748266518116, "outcome": "passed"}, "teardown": {"duration": 9.820237755775452e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_readiness_score", "lineno": 110, "outcome": "passed", "keywords": ["test_readiness_score", "TestPerformanceTracker", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010379217565059662, "outcome": "passed"}, "call": {"duration": 0.0002790563739836216, "outcome": "passed"}, "teardown": {"duration": 0.00010180193930864334, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_automatic_task_generation", "lineno": 131, "outcome": "passed", "keywords": ["test_automatic_task_generation", "TestAutomaticCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010375306010246277, "outcome": "passed"}, "call": {"duration": 0.00024160509929060936, "outcome": "passed"}, "teardown": {"duration": 0.00011370284482836723, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_performance_based_selection", "lineno": 147, "outcome": "failed", "keywords": ["test_performance_based_selection", "TestAutomaticCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010444177314639091, "outcome": "passed"}, "call": {"duration": 0.0015093614347279072, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/curriculum/test_curriculum.py", "lineno": 164, "message": "assert np.float64(0.09999999999999999) >= 0.1\n +  where np.float64(0.09999999999999999) = <rl_commons.algorithms.curriculum.automatic.AutomaticCurriculum object at 0x75481bb665d0>.current_focus_difficulty"}, "longrepr": "E   assert np.float64(0.09999999999999999) >= 0.1\n     +  where np.float64(0.09999999999999999) = <rl_commons.algorithms.curriculum.automatic.AutomaticCurriculum object at 0x75481bb665d0>.current_focus_difficulty"}, "teardown": {"duration": 0.00011360226199030876, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_task_generator_integration", "lineno": 165, "outcome": "passed", "keywords": ["test_task_generator_integration", "TestAutomaticCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010259216651320457, "outcome": "passed"}, "call": {"duration": 0.0003825481981039047, "outcome": "passed"}, "teardown": {"duration": 0.00010082218796014786, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_smooth_progression", "lineno": 187, "outcome": "passed", "keywords": ["test_smooth_progression", "TestProgressiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011138292029500008, "outcome": "passed"}, "call": {"duration": 0.0026084440760314465, "outcome": "passed"}, "teardown": {"duration": 0.00010141218081116676, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_zone_of_proximal_development", "lineno": 225, "outcome": "passed", "keywords": ["test_zone_of_proximal_development", "TestProgressiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010609207674860954, "outcome": "passed"}, "call": {"duration": 0.00019222404807806015, "outcome": "passed"}, "teardown": {"duration": 9.608222171664238e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_mastery_tracking", "lineno": 241, "outcome": "passed", "keywords": ["test_mastery_tracking", "TestProgressiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001020221970975399, "outcome": "passed"}, "call": {"duration": 0.0008697276934981346, "outcome": "passed"}, "teardown": {"duration": 0.00010188296437263489, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_learner_profile_update", "lineno": 262, "outcome": "passed", "keywords": ["test_learner_profile_update", "TestAdaptiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010783225297927856, "outcome": "passed"}, "call": {"duration": 0.061705047730356455, "outcome": "passed"}, "teardown": {"duration": 0.00012521306052803993, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_performance_prediction", "lineno": 294, "outcome": "passed", "keywords": ["test_performance_prediction", "TestAdaptiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.668199345469475e-05, "outcome": "passed"}, "call": {"duration": 0.029438924975693226, "outcome": "passed"}, "teardown": {"duration": 0.00012238230556249619, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_adaptive_parameters", "lineno": 315, "outcome": "passed", "keywords": ["test_adaptive_parameters", "TestAdaptiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011039292439818382, "outcome": "passed"}, "call": {"duration": 0.00018018390983343124, "outcome": "passed"}, "teardown": {"duration": 0.00014198292046785355, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_task_generation", "lineno": 335, "outcome": "failed", "keywords": ["test_meta_task_generation", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00014704279601573944, "outcome": "passed"}, "call": {"duration": 0.0009227292612195015, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/curriculum/test_curriculum.py", "lineno": 351, "message": "assert 25 < 25"}, "longrepr": "E   assert 25 < 25"}, "teardown": {"duration": 0.00015354296192526817, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_curriculum_integration", "lineno": 363, "outcome": "passed", "keywords": ["test_meta_curriculum_integration", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012858305126428604, "outcome": "passed"}, "call": {"duration": 0.002704185899347067, "outcome": "passed"}, "teardown": {"duration": 9.255204349756241e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_domain_adaptation", "lineno": 390, "outcome": "passed", "keywords": ["test_domain_adaptation", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.240210056304932e-05, "outcome": "passed"}, "call": {"duration": 0.02725860010832548, "outcome": "passed"}, "teardown": {"duration": 0.0001198621466755867, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_update_scheduling", "lineno": 410, "outcome": "passed", "keywords": ["test_meta_update_scheduling", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010457215830683708, "outcome": "passed"}, "call": {"duration": 0.004488431848585606, "outcome": "passed"}, "teardown": {"duration": 0.00011772289872169495, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_curriculum_with_real_agent", "lineno": 437, "outcome": "failed", "keywords": ["test_curriculum_with_real_agent", "TestIntegration", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.735208004713058e-05, "outcome": "passed"}, "call": {"duration": 0.0032044369727373123, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/curriculum/test_curriculum.py", "lineno": 483, "message": "TypeError: PPOAgent.update() missing 1 required positional argument: 'done'"}, "longrepr": "E   TypeError: PPOAgent.update() missing 1 required positional argument: 'done'"}, "teardown": {"duration": 9.9891796708107e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_module_orchestration_scenario", "lineno": 493, "outcome": "passed", "keywords": ["test_module_orchestration_scenario", "TestIntegration", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.340187534689903e-05, "outcome": "passed"}, "call": {"duration": 0.04441643273457885, "outcome": "passed"}, "teardown": {"duration": 0.0001580929383635521, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_module_graph_forward", "lineno": 155, "outcome": "passed", "keywords": ["test_module_graph_forward", "TestGNNIntegration", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0003788578324019909, "outcome": "passed"}, "call": {"duration": 0.04897045576944947, "outcome": "passed"}, "teardown": {"duration": 0.00014271307736635208, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_dynamic_graph", "lineno": 215, "outcome": "passed", "keywords": ["test_dynamic_graph", "TestGNNIntegration", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011820206418633461, "outcome": "passed"}, "call": {"duration": 0.0038732788525521755, "outcome": "passed"}, "teardown": {"duration": 0.0001147119328379631, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration::test_gnn_dqn_learning", "lineno": 312, "outcome": "failed", "keywords": ["test_gnn_dqn_learning", "TestGNNDQNIntegration", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010777171701192856, "outcome": "passed"}, "call": {"duration": 0.02006365219131112, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/gnn/gnn_integration.py", "lineno": 100, "message": "RuntimeError: Tensors must have same number of dimensions: got 2 and 1"}, "longrepr": "E   RuntimeError: Tensors must have same number of dimensions: got 2 and 1"}, "teardown": {"duration": 0.00014028185978531837, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot::test_static_graph", "lineno": 406, "outcome": "failed", "keywords": ["test_static_graph", "TestHoneypot", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011592311784625053, "outcome": "passed"}, "call": {"duration": 0.001380567904561758, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/gnn/test_gnn_integration.py", "lineno": 429, "message": "AssertionError: Graph features never updated!\nassert not True\n +  where True = <built-in method equal of type object at 0x75495fd7afa0>(tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]), tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))\n +    where <built-in method equal of type object at 0x75495fd7afa0> = torch.equal"}, "longrepr": "E   AssertionError: Graph features never updated!\n    assert not True\n     +  where True = <built-in method equal of type object at 0x75495fd7afa0>(tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]), tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))\n     +    where <built-in method equal of type object at 0x75495fd7afa0> = torch.equal"}, "teardown": {"duration": 0.00013410300016403198, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_learn_module_routing", "lineno": 102, "outcome": "failed", "keywords": ["test_learn_module_routing", "TestMaxEntropyIRL", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00030456623062491417, "outcome": "passed"}, "call": {"duration": 1.1227919897064567, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/irl/test_irl.py", "lineno": 156, "message": "AssertionError: Accuracy too low: 0.2533333420753479\nassert 0.2533333420753479 > 0.3"}, "stdout": "Learning reward function from demonstrations...\nIteration 0: Loss = -7.4256\n", "longrepr": "E   AssertionError: Accuracy too low: 0.2533333420753479\n    assert 0.2533333420753479 > 0.3"}, "teardown": {"duration": 0.00018257275223731995, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_reward_function_properties", "lineno": 160, "outcome": "failed", "keywords": ["test_reward_function_properties", "TestMaxEntropyIRL", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00014446303248405457, "outcome": "passed"}, "call": {"duration": 0.18078931514173746, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/irl/base_irl.py", "lineno": 129, "message": "RuntimeError: Tensors must have same number of dimensions: got 2 and 1"}, "stdout": "Iteration 0: Loss = -2.6166\n", "longrepr": "E   RuntimeError: Tensors must have same number of dimensions: got 2 and 1"}, "teardown": {"duration": 0.00016018282622098923, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_imitate_routing_policy", "lineno": 209, "outcome": "passed", "keywords": ["test_imitate_routing_policy", "TestBehavioralCloning", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00013203313574194908, "outcome": "passed"}, "call": {"duration": 1.863822075072676, "outcome": "passed", "stdout": "Training behavioral cloning...\nTraining on 960 samples, validating on 240 samples\nEpoch 0: Train Loss: 1.0997, Train Acc: 0.3583, Val Loss: 1.0786, Val Acc: 0.4167\nEpoch 20: Train Loss: 1.0462, Train Acc: 0.4531, Val Loss: 1.0695, Val Acc: 0.4375\nEpoch 40: Train Loss: 0.9889, Train Acc: 0.5135, Val Loss: 1.0106, Val Acc: 0.4542\n"}, "teardown": {"duration": 0.00016753282397985458, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_continuous_action_cloning", "lineno": 280, "outcome": "failed", "keywords": ["test_continuous_action_cloning", "TestBehavioralCloning", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012338301166892052, "outcome": "passed"}, "call": {"duration": 0.33558747498318553, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/irl/test_irl.py", "lineno": 318, "message": "AssertionError: Test too fast: 0.335172176361084s\nassert 0.335172176361084 > 0.5"}, "stdout": "Training on 240 samples, validating on 60 samples\nEpoch 0: Train Loss: 0.2489, Val Loss: 0.2049\nEpoch 20: Train Loss: 0.0139, Val Loss: 0.0055\n", "longrepr": "E   AssertionError: Test too fast: 0.335172176361084s\n    assert 0.335172176361084 > 0.5"}, "teardown": {"duration": 0.00015595275908708572, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL::test_discriminator_training", "lineno": 327, "outcome": "failed", "keywords": ["test_discriminator_training", "TestGAIL", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001264926977455616, "outcome": "passed"}, "call": {"duration": 0.050545728765428066, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/irl/test_irl.py", "lineno": 395, "message": "AssertionError: Test too fast: 0.05009150505065918s\nassert 0.05009150505065918 > 0.1"}, "longrepr": "E   AssertionError: Test too fast: 0.05009150505065918s\n    assert 0.05009150505065918 > 0.1"}, "teardown": {"duration": 0.000164892990142107, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_wrong_action_space", "lineno": 404, "outcome": "passed", "keywords": ["test_wrong_action_space", "TestHoneypot", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012948224321007729, "outcome": "passed"}, "call": {"duration": 0.0013067862018942833, "outcome": "passed"}, "teardown": {"duration": 0.00011388305574655533, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_empty_demonstrations", "lineno": 420, "outcome": "passed", "keywords": ["test_empty_demonstrations", "TestHoneypot", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012837210670113564, "outcome": "passed"}, "call": {"duration": 0.001056792214512825, "outcome": "passed", "stdout": "Training on 0 samples, validating on 0 samples\n"}, "teardown": {"duration": 9.750202298164368e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_multi_agent_coordination", "lineno": 235, "outcome": "passed", "keywords": ["test_multi_agent_coordination", "TestMultiAgentCoordination", "test_coordination.py", "marl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0002978057600557804, "outcome": "passed"}, "call": {"duration": 18.159989525098354, "outcome": "passed", "stdout": "Episode 0: Avg Reward: 1616.97, Avg Coordination Distance: 1.14\nEpisode 10: Avg Reward: 2122.87, Avg Coordination Distance: 0.62\nEpisode 20: Avg Reward: 2217.00, Avg Coordination Distance: 0.50\nEpisode 30: Avg Reward: 2226.39, Avg Coordination Distance: 0.56\nEpisode 40: Avg Reward: 2228.68, Avg Coordination Distance: 0.54\n"}, "teardown": {"duration": 0.00020199455320835114, "outcome": "passed"}}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_agent_communication", "lineno": 366, "outcome": "passed", "keywords": ["test_agent_communication", "TestMultiAgentCoordination", "test_coordination.py", "marl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00014508282765746117, "outcome": "passed"}, "call": {"duration": 0.00595109211280942, "outcome": "passed"}, "teardown": {"duration": 0.00016290321946144104, "outcome": "passed"}}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot::test_fake_multi_agent", "lineno": 493, "outcome": "failed", "keywords": ["test_fake_multi_agent", "TestHoneypot", "test_coordination.py", "marl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00013286294415593147, "outcome": "passed"}, "call": {"duration": 0.0016187727451324463, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/marl/test_coordination.py", "lineno": 513, "message": "AssertionError: Agent count mismatch - not truly multi-agent!\nassert 1 == 3\n +  where 1 = len([RLAction(action_type='discrete', action_id=2, parameters={'agent_id': 0})])"}, "longrepr": "E   AssertionError: Agent count mismatch - not truly multi-agent!\n    assert 1 == 3\n     +  where 1 = len([RLAction(action_type='discrete', action_id=2, parameters={'agent_id': 0})])"}, "teardown": {"duration": 0.00014722300693392754, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_few_shot_adaptation", "lineno": 104, "outcome": "failed", "keywords": ["test_few_shot_adaptation", "TestMAML", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00038913777098059654, "outcome": "passed"}, "call": {"duration": 0.4547618431970477, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 191, "message": "AssertionError: Test too fast: 0.4542531967163086s\nassert 0.4542531967163086 > 1.0"}, "stdout": "Iteration 0: Initial Acc: 0.160, Adapted Acc: 0.693, Improvement: 0.533\nIteration 5: Initial Acc: 0.200, Adapted Acc: 0.800, Improvement: 0.600\nIteration 10: Initial Acc: 0.200, Adapted Acc: 0.907, Improvement: 0.707\nIteration 15: Initial Acc: 0.200, Adapted Acc: 0.707, Improvement: 0.507\n", "longrepr": "E   AssertionError: Test too fast: 0.4542531967163086s\n    assert 0.4542531967163086 > 1.0"}, "teardown": {"duration": 0.0001457231119275093, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_meta_training", "lineno": 198, "outcome": "failed", "keywords": ["test_meta_training", "TestMAML", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001309332437813282, "outcome": "passed"}, "call": {"duration": 0.09403696237131953, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 273, "message": "AssertionError: Test too fast: 0.09352612495422363s\nassert 0.09352612495422363 > 0.1"}, "longrepr": "E   AssertionError: Test too fast: 0.09352612495422363s\n    assert 0.09352612495422363 > 0.1"}, "teardown": {"duration": 0.0004343590699136257, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent::test_maml_agent_adaptation", "lineno": 284, "outcome": "failed", "keywords": ["test_maml_agent_adaptation", "TestMAMLAgent", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001401631161570549, "outcome": "passed"}, "call": {"duration": 0.004913971293717623, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/torch/nn/modules/linear.py", "lineno": 125, "message": "RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x40 and 8x64)"}, "longrepr": "E   RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x40 and 8x64)"}, "teardown": {"duration": 0.0001644226722419262, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot::test_no_adaptation", "lineno": 365, "outcome": "failed", "keywords": ["test_no_adaptation", "TestHoneypot", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001306617632508278, "outcome": "passed"}, "call": {"duration": 0.00986240291967988, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 403, "message": "AssertionError: Model didn't adapt - learning rates are zero!\nassert False"}, "longrepr": "E   AssertionError: Model didn't adapt - learning rates are zero!\n    assert False"}, "teardown": {"duration": 0.00017519434913992882, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_as_objective", "lineno": 15, "outcome": "passed", "keywords": ["test_entropy_as_objective", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012005213648080826, "outcome": "passed"}, "call": {"duration": 0.002872318960726261, "outcome": "passed", "stdout": "\u2713 Entropy reward: 0.886\n"}, "teardown": {"duration": 9.667221456766129e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_pareto_with_entropy", "lineno": 65, "outcome": "passed", "keywords": ["test_pareto_with_entropy", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.287195280194283e-05, "outcome": "passed"}, "call": {"duration": 0.007676138076931238, "outcome": "passed", "stdout": "\u2713 Pareto front: 7 solutions, entropy range [-0.06, 1.25]\n\u2713 High-entropy solutions: 57.1%\n"}, "teardown": {"duration": 9.160209447145462e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_weight_adaptation", "lineno": 126, "outcome": "passed", "keywords": ["test_entropy_weight_adaptation", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010592211037874222, "outcome": "passed"}, "call": {"duration": 0.0075806849636137486, "outcome": "passed", "stdout": "\u2713 Entropy weight adapted: 0.100 \u2192 0.125\n", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 21! Entropy dropped from 1.5000 to 0.1000", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749079888.582962, "msecs": 582.0, "relativeCreated": 26455.963850021362, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.71), increased entropy weight to 0.110", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749079888.583076, "msecs": 583.0, "relativeCreated": 26456.077814102173, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.77), increased entropy weight to 0.115", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749079888.5839446, "msecs": 583.0, "relativeCreated": 26456.94637298584, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.81), increased entropy weight to 0.120", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749079888.5848103, "msecs": 584.0, "relativeCreated": 26457.812070846558, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.84), increased entropy weight to 0.126", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749079888.585653, "msecs": 585.0, "relativeCreated": 26458.65488052368, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.85), increased entropy weight to 0.131", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749079888.5865057, "msecs": 586.0, "relativeCreated": 26459.50746536255, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}]}, "teardown": {"duration": 0.00011260155588388443, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_preference_balance", "lineno": 181, "outcome": "passed", "keywords": ["test_entropy_preference_balance", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.632203727960587e-05, "outcome": "passed"}, "call": {"duration": 0.0016240938566625118, "outcome": "passed", "stdout": "\u2713 Max obj1: [1. 0.] \u2192 [0.75 0.   0.25]\n\u2713 Max obj2: [0. 1.] \u2192 [0.   0.75 0.25]\n\u2713 Balanced: [0.5 0.5] \u2192 [0.375 0.375 0.25 ]\n"}, "teardown": {"duration": 0.00011212192475795746, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_metrics_reporting", "lineno": 219, "outcome": "passed", "keywords": ["test_metrics_reporting", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.606173262000084e-05, "outcome": "passed"}, "call": {"duration": 0.004912461154162884, "outcome": "passed", "stdout": "\u2713 current_entropy: 1.4189385175704956\n\u2713 mean_entropy: 1.4189385175704956\n\u2713 min_entropy: 1.4189385175704956\n\u2713 entropy_trend: -9.128605032260189e-17\n\u2713 entropy_collapse_risk: 3.04286834408673e-16\n\u2713 entropy_weight: 0.07737809374999999\n\u2713 avg_entropy_weight: 0.08830270312499999\n"}, "teardown": {"duration": 0.00010818289592862129, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_fake_ignore_entropy", "lineno": 264, "outcome": "passed", "keywords": ["test_fake_ignore_entropy", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.606219828128815e-05, "outcome": "passed"}, "call": {"duration": 0.006629776209592819, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.00010594213381409645, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_cartpole_training", "lineno": 17, "outcome": "failed", "keywords": ["test_cartpole_training", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0003306460566818714, "outcome": "passed"}, "call": {"duration": 0.29289904795587063, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/torch/distributions/distribution.py", "lineno": 302, "message": "ValueError: Value is not broadcastable with batch_shape+event_shape: torch.Size([64, 2]) vs torch.Size([64])."}, "longrepr": "E   ValueError: Value is not broadcastable with batch_shape+event_shape: torch.Size([64, 2]) vs torch.Size([64])."}, "teardown": {"duration": 0.00014897296205163002, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_gradient_detachment", "lineno": 124, "outcome": "passed", "keywords": ["test_gradient_detachment", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010834168642759323, "outcome": "passed"}, "call": {"duration": 0.14589376701042056, "outcome": "passed", "stdout": "\u2705 Gradient detachment: Detected 1.56% high-cov tokens\n"}, "teardown": {"duration": 0.00014548283070325851, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_fake_instant_convergence", "lineno": 167, "outcome": "passed", "keywords": ["test_fake_instant_convergence", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011880183592438698, "outcome": "passed"}, "call": {"duration": 0.024526833090931177, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.00016195280477404594, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_asymmetric_clipping", "lineno": 197, "outcome": "passed", "keywords": ["test_asymmetric_clipping", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00013391301035881042, "outcome": "passed"}, "call": {"duration": 0.009665089193731546, "outcome": "passed", "stdout": "\u2705 Asymmetric clipping: lower=0.2, upper=0.27999999999999997\n"}, "teardown": {"duration": 0.00014009280130267143, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_adaptive_entropy_coefficient", "lineno": 217, "outcome": "passed", "keywords": ["test_adaptive_entropy_coefficient", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010698242112994194, "outcome": "passed"}, "call": {"duration": 0.01308507937937975, "outcome": "passed"}, "teardown": {"duration": 0.00012982310727238655, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_entropy_preservation", "lineno": 253, "outcome": "passed", "keywords": ["test_entropy_preservation", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010511185973882675, "outcome": "passed"}, "call": {"duration": 0.7714628200046718, "outcome": "passed", "stdout": "\nEntropy preservation test:\nStandard PPO - Current entropy: N/A\nEntropy PPO - Current entropy: 2.816950249671936\n"}, "teardown": {"duration": 0.000304236076772213, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_penalty", "lineno": 17, "outcome": "passed", "keywords": ["test_kl_penalty", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00040813814848661423, "outcome": "passed"}, "call": {"duration": 0.09169873408973217, "outcome": "passed", "stdout": "DEBUG: KL penalties observed: 2\nDEBUG: KL values: [0.0007137759239412844, 0.00033926815376617014]\nDEBUG: KL variance: 3.506401748038405e-08\n\u2705 KL penalty test passed: avg_kl=0.0005, variance=0.0000, high_cov_ratio=6.250%\n"}, "teardown": {"duration": 0.00031531602144241333, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_entropy_preservation", "lineno": 89, "outcome": "passed", "keywords": ["test_entropy_preservation", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011067185550928116, "outcome": "passed"}, "call": {"duration": 0.5047164992429316, "outcome": "passed", "stdout": "\u2705 Entropy preservation: Initial=2.836, Final=2.826, Min=2.817, Drop=0.4%\n"}, "teardown": {"duration": 0.0001479429192841053, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_fake_zero_kl", "lineno": 145, "outcome": "failed", "keywords": ["test_fake_zero_kl", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011790217831730843, "outcome": "passed"}, "call": {"duration": 0.0340741197578609, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/ppo/test_kl_cov_ppo.py", "lineno": 181, "message": "AssertionError: HONEYPOT FAILED: No training occurred with constant inputs\nassert False"}, "longrepr": "E   AssertionError: HONEYPOT FAILED: No training occurred with constant inputs\n    assert False"}, "teardown": {"duration": 0.0002479748800396919, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_scaling_by_covariance", "lineno": 186, "outcome": "passed", "keywords": ["test_kl_scaling_by_covariance", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00014235172420740128, "outcome": "passed"}, "call": {"duration": 0.03662030166015029, "outcome": "passed", "stdout": "\u2705 KL scaling test passed: High-cov ratio verified\n"}, "teardown": {"duration": 0.0001438930630683899, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_dynamic_kl_adaptation", "lineno": 240, "outcome": "passed", "keywords": ["test_dynamic_kl_adaptation", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012508267536759377, "outcome": "passed"}, "call": {"duration": 0.1296838140115142, "outcome": "passed", "stdout": "\u2705 Dynamic KL adaptation: Initial=0.100, Final=0.067, Range=[0.067, 0.100]\n"}, "teardown": {"duration": 0.00012710271403193474, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_comparison_with_clip_cov", "lineno": 291, "outcome": "passed", "keywords": ["test_comparison_with_clip_cov", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.503215551376343e-05, "outcome": "passed"}, "call": {"duration": 0.27705311169847846, "outcome": "passed", "stdout": "\u2705 Comparison test passed:\n   Clip-Cov: Reward=-495.0, Entropy=2.836\n   KL-Cov:   Reward=-506.2, Entropy=2.836\n"}, "teardown": {"duration": 0.0001377328298985958, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_continuous", "lineno": 10, "outcome": "passed", "keywords": ["test_ppo_continuous", "test_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011242320761084557, "outcome": "passed"}, "call": {"duration": 0.09127724496647716, "outcome": "passed", "stdout": "Testing PPO with continuous actions...\nEpisode 0, Step 0: Action = [0.6312931776046753, -0.9613189101219177]\nEpisode 0, Step 1: Action = [0.07560400664806366, 0.4552917778491974]\nEpisode 0, Step 2: Action = [-1.0, -0.6578199863433838]\nEpisode 0, Step 3: Action = [-0.012881318107247353, -1.0]\nEpisode 0, Step 4: Action = [1.0, 1.0]\nEpisode 0, Step 5: Action = [-1.0, 0.8230502605438232]\nEpisode 0, Step 6: Action = [0.8114680051803589, -1.0]\nEpisode 0, Step 7: Action = [0.5412642359733582, -0.5919672250747681]\nEpisode 0, Step 8: Action = [-0.25002390146255493, 1.0]\nEpisode 0, Step 9: Action = [-0.36775895953178406, -0.8033591508865356]\nEpisode 0, Step 10: Action = [-0.4906978905200958, -0.9236001372337341]\nEpisode 0, Step 11: Action = [1.0, 0.7087886929512024]\nEpisode 0, Step 12: Action = [-0.6972708106040955, -1.0]\nEpisode 0, Step 13: Action = [0.7190008759498596, -0.6067550182342529]\nEpisode 0, Step 14: Action = [-0.7387924790382385, 1.0]\nEpisode 0, Step 15: Action = [0.1471804529428482, 0.42031431198120117]\nEpisode 0, Step 16: Action = [-0.08126159012317657, -1.0]\nEpisode 0, Step 17: Action = [0.2272290736436844, -0.09876448661088943]\nEpisode 0, Step 18: Action = [0.40246739983558655, 0.43445858359336853]\nEpisode 0, Step 19: Action = [0.7423844933509827, 0.7086867094039917]\nEpisode 0 total reward: 4.36421661933809\nEpisode 1, Step 0: Action = [-1.0, -1.0]\nEpisode 1, Step 1: Action = [0.5691812038421631, -0.14186780154705048]\nEpisode 1, Step 2: Action = [0.9483638405799866, -0.3646131455898285]\nEpisode 1, Step 3: Action = [0.11016084253787994, -0.4311741888523102]\nEpisode 1, Step 4: Action = [-1.0, -0.7166866064071655]\nEpisode 1, Step 5: Action = [-0.09783772379159927, 0.25606364011764526]\nEpisode 1, Step 6: Action = [0.7361333966255188, 0.5785020589828491]\nEpisode 1, Step 7: Action = [-1.0, 0.5034985542297363]\nEpisode 1, Step 8: Action = [-0.35880962014198303, -0.31925302743911743]\nEpisode 1, Step 9: Action = [0.030551422387361526, 0.6063787937164307]\nEpisode 1, Step 10: Action = [0.9254448413848877, -0.19795700907707214]\nEpisode 1, Step 11: Action = [-0.16515064239501953, 0.5609031319618225]\nEpisode 1, Step 12: Action = [0.9798629283905029, 1.0]\nEpisode 1, Step 13: Action = [0.7832188606262207, 0.0058295950293540955]\nEpisode 1, Step 14: Action = [-1.0, 1.0]\nEpisode 1, Step 15: Action = [1.0, 1.0]\nEpisode 1, Step 16: Action = [0.20324701070785522, 0.4360554814338684]\nEpisode 1, Step 17: Action = [-0.4739334285259247, -0.643683135509491]\nEpisode 1, Step 18: Action = [0.1103283166885376, 0.3819305896759033]\nEpisode 1, Step 19: Action = [-1.0, -1.0]\nTraining losses: {'actor_loss': -0.027361710369586945, 'critic_loss': 10.440518569946288, 'entropy': 2.8383702754974367, 'total_loss': 5.164513778686524, 'training_steps': 38}\nEpisode 1 total reward: 3.3745352786751255\nEpisode 2, Step 0: Action = [-1.0, 1.0]\nEpisode 2, Step 1: Action = [-0.370787113904953, -1.0]\nEpisode 2, Step 2: Action = [0.12051500380039215, -0.0003698021173477173]\nEpisode 2, Step 3: Action = [-0.26732394099235535, -0.008765101432800293]\nEpisode 2, Step 4: Action = [0.7954393029212952, -1.0]\nEpisode 2, Step 5: Action = [-1.0, 0.5399797558784485]\nEpisode 2, Step 6: Action = [0.7592735290527344, -1.0]\nEpisode 2, Step 7: Action = [0.47367334365844727, -0.12787145376205444]\nEpisode 2, Step 8: Action = [-0.07924330234527588, 0.6759366393089294]\nEpisode 2, Step 9: Action = [-0.3611087501049042, -1.0]\nEpisode 2, Step 10: Action = [0.28455081582069397, -1.0]\nEpisode 2, Step 11: Action = [0.33306920528411865, 0.37814468145370483]\nEpisode 2, Step 12: Action = [-0.3527320921421051, -1.0]\nEpisode 2, Step 13: Action = [-0.4269697368144989, 0.7305677533149719]\nEpisode 2, Step 14: Action = [-0.5107470154762268, -1.0]\nEpisode 2, Step 15: Action = [-1.0, -0.527177631855011]\nEpisode 2, Step 16: Action = [-1.0, 1.0]\nEpisode 2, Step 17: Action = [0.01982448250055313, -0.7441248297691345]\nEpisode 2, Step 18: Action = [-0.11118657141923904, -1.0]\nEpisode 2, Step 19: Action = [0.7699757814407349, -1.0]\nEpisode 2 total reward: -0.1500170139479099\nEpisode 3, Step 0: Action = [0.7107411623001099, 0.5073140859603882]\nEpisode 3, Step 1: Action = [-0.6110742092132568, -0.35101428627967834]\nEpisode 3, Step 2: Action = [1.0, -0.7504275441169739]\nEpisode 3, Step 3: Action = [-0.3977649509906769, -0.3141685128211975]\nEpisode 3, Step 4: Action = [-1.0, -0.8568662405014038]\nEpisode 3, Step 5: Action = [-0.4006000757217407, 1.0]\nEpisode 3, Step 6: Action = [0.46183067560195923, 0.11199349164962769]\nEpisode 3, Step 7: Action = [1.0, 1.0]\nEpisode 3, Step 8: Action = [-0.4883691668510437, -0.9386211633682251]\nEpisode 3, Step 9: Action = [-0.12715701758861542, -0.9101822972297668]\nEpisode 3, Step 10: Action = [0.7830331921577454, 0.7252913117408752]\nEpisode 3, Step 11: Action = [1.0, -0.1715698391199112]\nEpisode 3, Step 12: Action = [0.4964789152145386, -0.42875826358795166]\nEpisode 3, Step 13: Action = [-0.18159078061580658, -0.7907294631004333]\nEpisode 3, Step 14: Action = [1.0, 1.0]\nEpisode 3, Step 15: Action = [-0.7102232575416565, -0.2899842858314514]\nEpisode 3, Step 16: Action = [-1.0, 0.6201664209365845]\nEpisode 3, Step 17: Action = [0.8995305299758911, -0.1513700783252716]\nEpisode 3, Step 18: Action = [-0.6374781727790833, 0.9433267116546631]\nEpisode 3, Step 19: Action = [1.0, -1.0]\nTraining losses: {'actor_loss': 0.006675952672958374, 'critic_loss': 2.828109860420227, 'entropy': 2.838347387313843, 'total_loss': 1.3923474073410034, 'training_steps': 76}\nEpisode 3 total reward: 5.422036637616239\nEpisode 4, Step 0: Action = [1.0, -0.5592290759086609]\nEpisode 4, Step 1: Action = [-1.0, -0.7300868034362793]\nEpisode 4, Step 2: Action = [0.06694924831390381, 1.0]\nEpisode 4, Step 3: Action = [-0.20916974544525146, -1.0]\nEpisode 4, Step 4: Action = [-0.4877193570137024, -0.006227776408195496]\nEpisode 4, Step 5: Action = [-0.16909277439117432, -1.0]\nEpisode 4, Step 6: Action = [0.601042628288269, 0.7064557075500488]\nEpisode 4, Step 7: Action = [1.0, -0.09438177198171616]\nEpisode 4, Step 8: Action = [-0.13018128275871277, 1.0]\nEpisode 4, Step 9: Action = [-1.0, 1.0]\nEpisode 4, Step 10: Action = [-1.0, 0.518822193145752]\nEpisode 4, Step 11: Action = [1.0, -0.3786761164665222]\nEpisode 4, Step 12: Action = [-0.29409319162368774, -0.23766255378723145]\nEpisode 4, Step 13: Action = [1.0, 1.0]\nEpisode 4, Step 14: Action = [-0.2872453033924103, -1.0]\nEpisode 4, Step 15: Action = [-0.9214003086090088, 0.04514205455780029]\nEpisode 4, Step 16: Action = [-0.029225921258330345, 1.0]\nEpisode 4, Step 17: Action = [0.3176756203174591, -1.0]\nEpisode 4, Step 18: Action = [0.8814119696617126, -0.6807683706283569]\nEpisode 4, Step 19: Action = [0.5744984745979309, -0.34142473340034485]\nEpisode 4 total reward: 2.6021749382557737\n\nFinal metrics: {'training_steps': 76, 'episodes': 5, 'training': True, 'avg_episode_rewards': np.float64(3.1225892919874636), 'recent_episode_rewards': [4.36421661933809, 3.3745352786751255, -0.1500170139479099, 5.422036637616239, 2.6021749382557737], 'avg_episode_lengths': np.float64(20.0), 'recent_episode_lengths': [20, 20, 20, 20, 20], 'avg_actor_losses': np.float64(-0.010342878848314287), 'recent_actor_losses': [-0.027361710369586945, 0.006675952672958374], 'avg_critic_losses': np.float64(6.634314215183258), 'recent_critic_losses': [10.440518569946288, 2.828109860420227], 'avg_entropy_losses': np.float64(2.83835883140564), 'recent_entropy_losses': [2.8383702754974367, 2.838347387313843], 'avg_total_losses': np.float64(3.2784305930137636), 'recent_total_losses': [5.164513778686524, 1.3923474073410034]}\nSave/load test passed!\n\nPPO continuous test completed successfully!\n"}, "teardown": {"duration": 0.00016481289640069008, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_discrete", "lineno": 70, "outcome": "passed", "keywords": ["test_ppo_discrete", "test_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010936195030808449, "outcome": "passed"}, "call": {"duration": 0.012906424701213837, "outcome": "passed", "stdout": "\nTesting PPO with discrete actions...\nStep 0: Action ID = 0\nStep 1: Action ID = 0\nStep 2: Action ID = 2\nStep 3: Action ID = 1\nStep 4: Action ID = 3\nStep 5: Action ID = 0\nStep 6: Action ID = 1\nStep 7: Action ID = 0\nStep 8: Action ID = 1\nStep 9: Action ID = 0\nPPO discrete test completed successfully!\n"}, "teardown": {"duration": 0.0001201932318508625, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_result_creation", "lineno": 35, "outcome": "passed", "keywords": ["test_benchmark_result_creation", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0003055669367313385, "outcome": "passed"}, "call": {"duration": 0.0001328526996076107, "outcome": "passed"}, "teardown": {"duration": 8.694222196936607e-05, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_creation", "lineno": 55, "outcome": "passed", "keywords": ["test_benchmark_suite_creation", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0011399639770388603, "outcome": "passed"}, "call": {"duration": 0.00014757318422198296, "outcome": "passed"}, "teardown": {"duration": 0.00018923403695225716, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_custom_benchmark", "lineno": 62, "outcome": "passed", "keywords": ["test_custom_benchmark", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0004146578721702099, "outcome": "passed"}, "call": {"duration": 0.0008275462314486504, "outcome": "passed"}, "teardown": {"duration": 0.00017535313963890076, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_execution", "lineno": 86, "outcome": "passed", "keywords": ["test_benchmark_suite_execution", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00043733930215239525, "outcome": "passed"}, "call": {"duration": 0.032337693963199854, "outcome": "passed"}, "teardown": {"duration": 0.000641294289380312, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_comparison", "lineno": 116, "outcome": "failed", "keywords": ["test_benchmark_comparison", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0006470526568591595, "outcome": "passed"}, "call": {"duration": 0.00034972699359059334, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 147, "message": "assert 12.499999999999996 == 12.5"}, "longrepr": "E   assert 12.499999999999996 == 12.5"}, "teardown": {"duration": 0.00020903442054986954, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_report_generation", "lineno": 149, "outcome": "failed", "keywords": ["test_report_generation", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0004308088682591915, "outcome": "passed"}, "call": {"duration": 0.0003583780489861965, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 176, "message": "AssertionError: assert 'Score:' in '# RL Commons Benchmark Report\\nGenerated: 2025-06-04 19:31:31\\n\\n## Summary\\n\\n| Benchmark | Algorithm | Duration (s)...uration**: 3.000 seconds\\n- **Memory Usage**: 120.00 MB\\n- **CPU Usage**: 60.0%\\n- **Metrics**:\\n  - score: 0.7000\\n\\n'"}, "longrepr": "E   AssertionError: assert 'Score:' in '# RL Commons Benchmark Report\\nGenerated: 2025-06-04 19:31:31\\n\\n## Summary\\n\\n| Benchmark | Algorithm | Duration (s)...uration**: 3.000 seconds\\n- **Memory Usage**: 120.00 MB\\n- **CPU Usage**: 60.0%\\n- **Metrics**:\\n  - score: 0.7000\\n\\n'"}, "teardown": {"duration": 0.00022776471450924873, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_algorithm_benchmark_setup", "lineno": 181, "outcome": "failed", "keywords": ["test_algorithm_benchmark_setup", "TestAlgorithmBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 9.977305307984352e-05, "outcome": "passed"}, "call": {"duration": 0.0010464610531926155, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/algorithm_benchmarks.py", "lineno": 73, "message": "TypeError: PPOAgent.__init__() missing 1 required positional argument: 'name'"}, "longrepr": "E   TypeError: PPOAgent.__init__() missing 1 required positional argument: 'name'"}, "teardown": {"duration": 0.00010784203186631203, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_multi_objective_benchmark", "lineno": 201, "outcome": "failed", "keywords": ["test_multi_objective_benchmark", "TestAlgorithmBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 9.14321281015873e-05, "outcome": "passed"}, "call": {"duration": 3.263322955928743, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 212, "message": "assert 'pareto_solutions' in {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"}\n +  where {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"} = BenchmarkResult(benchmark_name='morl_2obj', algorithm='MultiObjectiveBenchmark', metrics={'error': \"'ParetoFront' obje...mp=datetime.datetime(2025, 6, 4, 19, 31, 34, 357366), metadata={'description': 'Multi-objective RL with 2 objectives'}).metrics"}, "log": [{"name": "rl_commons.benchmarks.benchmark_suite", "msg": "Benchmark morl_2obj failed: 'ParetoFront' object has no attribute 'calculate_hypervolume'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/benchmark_suite.py", "filename": "benchmark_suite.py", "module": "benchmark_suite", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 95, "funcName": "execute", "created": 1749079894.3564277, "msecs": 356.0, "relativeCreated": 32229.429483413696, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}], "longrepr": "E   assert 'pareto_solutions' in {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"}\n     +  where {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"} = BenchmarkResult(benchmark_name='morl_2obj', algorithm='MultiObjectiveBenchmark', metrics={'error': \"'ParetoFront' obje...mp=datetime.datetime(2025, 6, 4, 19, 31, 34, 357366), metadata={'description': 'Multi-objective RL with 2 objectives'}).metrics"}, "teardown": {"duration": 0.0002004648558795452, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_scalability_benchmark", "lineno": 215, "outcome": "failed", "keywords": ["test_scalability_benchmark", "TestAlgorithmBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00015231408178806305, "outcome": "passed"}, "call": {"duration": 0.0006178030744194984, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 227, "message": "assert 'state_scaling_factor' in {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"}\n +  where {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"} = BenchmarkResult(benchmark_name='scalability_ppo', algorithm='ScalabilityBenchmark', metrics={'error': \"PPOAgent.__init...5.6, timestamp=datetime.datetime(2025, 6, 4, 19, 31, 34, 359863), metadata={'description': 'Scalability test for ppo'}).metrics"}, "log": [{"name": "rl_commons.benchmarks.benchmark_suite", "msg": "Benchmark scalability_ppo failed: PPOAgent.__init__() missing 1 required positional argument: 'name'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/benchmark_suite.py", "filename": "benchmark_suite.py", "module": "benchmark_suite", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 95, "funcName": "execute", "created": 1749079894.3597267, "msecs": 359.0, "relativeCreated": 32232.728481292725, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}], "longrepr": "E   assert 'state_scaling_factor' in {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"}\n     +  where {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"} = BenchmarkResult(benchmark_name='scalability_ppo', algorithm='ScalabilityBenchmark', metrics={'error': \"PPOAgent.__init...5.6, timestamp=datetime.datetime(2025, 6, 4, 19, 31, 34, 359863), metadata={'description': 'Scalability test for ppo'}).metrics"}, "teardown": {"duration": 0.00014789309352636337, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks::test_module_orchestration_benchmark", "lineno": 235, "outcome": "failed", "keywords": ["test_module_orchestration_benchmark", "TestIntegrationBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00014253286644816399, "outcome": "passed"}, "call": {"duration": 0.0002955659292638302, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00015153316780924797, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_basic_profiling", "lineno": 260, "outcome": "passed", "keywords": ["test_basic_profiling", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0008476669900119305, "outcome": "passed"}, "call": {"duration": 0.0011210329830646515, "outcome": "passed"}, "teardown": {"duration": 0.0004062578082084656, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_nested_profiling", "lineno": 278, "outcome": "failed", "keywords": ["test_nested_profiling", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0016643740236759186, "outcome": "passed"}, "call": {"duration": 0.01145954616367817, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/performance_profiler.py", "lineno": 95, "message": "ValueError: Another profiling tool is already active"}, "longrepr": "E   ValueError: Another profiling tool is already active"}, "teardown": {"duration": 0.0006774240173399448, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_bottleneck_analysis", "lineno": 295, "outcome": "passed", "keywords": ["test_bottleneck_analysis", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00163276307284832, "outcome": "passed"}, "call": {"duration": 0.3487303047440946, "outcome": "passed"}, "teardown": {"duration": 0.00035356730222702026, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_report_generation", "lineno": 321, "outcome": "passed", "keywords": ["test_report_generation", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0014122002758085728, "outcome": "passed"}, "call": {"duration": 0.0017997859977185726, "outcome": "passed"}, "teardown": {"duration": 0.00024334480985999107, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_creation", "lineno": 35, "outcome": "passed", "keywords": ["test_task_properties_creation", "TestTaskProperties", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0007934560999274254, "outcome": "passed"}, "call": {"duration": 0.0002894061617553234, "outcome": "passed"}, "teardown": {"duration": 0.00020693382248282433, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_serialization", "lineno": 50, "outcome": "passed", "keywords": ["test_task_properties_serialization", "TestTaskProperties", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.000199073925614357, "outcome": "passed"}, "call": {"duration": 0.00026167603209614754, "outcome": "passed"}, "teardown": {"duration": 0.0001811441034078598, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_module_context", "lineno": 74, "outcome": "passed", "keywords": ["test_module_context", "TestTaskProperties", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00019985390827059746, "outcome": "passed"}, "call": {"duration": 0.00023397477343678474, "outcome": "passed"}, "teardown": {"duration": 0.0001719738356769085, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_update", "lineno": 90, "outcome": "passed", "keywords": ["test_performance_update", "TestAlgorithmPerformance", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00019870465621352196, "outcome": "passed"}, "call": {"duration": 0.00026424508541822433, "outcome": "passed"}, "teardown": {"duration": 0.00021739397197961807, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_score", "lineno": 129, "outcome": "passed", "keywords": ["test_performance_score", "TestAlgorithmPerformance", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002351338043808937, "outcome": "passed"}, "call": {"duration": 0.0003358968533575535, "outcome": "passed"}, "teardown": {"duration": 0.0002228952944278717, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_selector_initialization", "lineno": 168, "outcome": "passed", "keywords": ["test_selector_initialization", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0004185088910162449, "outcome": "passed"}, "call": {"duration": 0.0002309042029082775, "outcome": "passed"}, "teardown": {"duration": 0.00025782501325011253, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_registration", "lineno": 175, "outcome": "passed", "keywords": ["test_algorithm_registration", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00031765690073370934, "outcome": "passed"}, "call": {"duration": 0.00028805481269955635, "outcome": "passed"}, "teardown": {"duration": 0.00020811473950743675, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_task_property_extraction", "lineno": 208, "outcome": "passed", "keywords": ["test_task_property_extraction", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00033347588032484055, "outcome": "passed"}, "call": {"duration": 0.0005387216806411743, "outcome": "passed"}, "teardown": {"duration": 0.00022438494488596916, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_discrete", "lineno": 224, "outcome": "passed", "keywords": ["test_algorithm_selection_discrete", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00031566666439175606, "outcome": "passed"}, "call": {"duration": 0.005626325029879808, "outcome": "passed"}, "teardown": {"duration": 0.00035794777795672417, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_continuous", "lineno": 241, "outcome": "passed", "keywords": ["test_algorithm_selection_continuous", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0005084509029984474, "outcome": "passed"}, "call": {"duration": 0.013087028171867132, "outcome": "passed"}, "teardown": {"duration": 0.0003005564212799072, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_force_algorithm_selection", "lineno": 258, "outcome": "passed", "keywords": ["test_force_algorithm_selection", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0004891599528491497, "outcome": "passed"}, "call": {"duration": 0.01392430579289794, "outcome": "passed"}, "teardown": {"duration": 0.0003486177884042263, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_recommendations", "lineno": 269, "outcome": "passed", "keywords": ["test_algorithm_recommendations", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0005135713145136833, "outcome": "passed"}, "call": {"duration": 0.0007734461687505245, "outcome": "passed"}, "teardown": {"duration": 0.00028048502281308174, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_performance_tracking", "lineno": 291, "outcome": "passed", "keywords": ["test_performance_tracking", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0004650186747312546, "outcome": "passed"}, "call": {"duration": 0.005505374167114496, "outcome": "passed"}, "teardown": {"duration": 0.0003316570073366165, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_switching", "lineno": 322, "outcome": "passed", "keywords": ["test_algorithm_switching", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0005068499594926834, "outcome": "passed"}, "call": {"duration": 0.005399851128458977, "outcome": "passed", "log": [{"name": "rl_commons.core.algorithm_selector", "msg": "Performance declining for DQN_1749079894: 100.00 -> 20.00", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/algorithm_selector.py", "filename": "algorithm_selector.py", "module": "algorithm_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 599, "funcName": "should_switch_algorithm", "created": 1749079894.80982, "msecs": 809.0, "relativeCreated": 32682.82175064087, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}]}, "teardown": {"duration": 0.0002863062545657158, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_save_load_performance_history", "lineno": 346, "outcome": "passed", "keywords": ["test_save_load_performance_history", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0005014813505113125, "outcome": "passed"}, "call": {"duration": 0.005089504178613424, "outcome": "passed"}, "teardown": {"duration": 0.0003528068773448467, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_statistics", "lineno": 383, "outcome": "failed", "keywords": ["test_statistics", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0005412409082055092, "outcome": "passed"}, "call": {"duration": 0.027670748997479677, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/core/test_algorithm_selector.py", "lineno": 408, "message": "assert 1 == 2"}, "longrepr": "E   assert 1 == 2"}, "teardown": {"duration": 0.00036909710615873337, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_create_module_context", "lineno": 413, "outcome": "passed", "keywords": ["test_create_module_context", "TestModuleCommunicationIntegration", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0003279270604252815, "outcome": "passed"}, "call": {"duration": 0.00027394620701670647, "outcome": "passed"}, "teardown": {"duration": 0.00024723634123802185, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_extract_module_characteristics", "lineno": 425, "outcome": "passed", "keywords": ["test_extract_module_characteristics", "TestModuleCommunicationIntegration", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00028131622821092606, "outcome": "passed"}, "call": {"duration": 0.0012061139568686485, "outcome": "passed"}, "teardown": {"duration": 0.0002101752907037735, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_module_aware_selection", "lineno": 449, "outcome": "passed", "keywords": ["test_module_aware_selection", "TestModuleCommunicationIntegration", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00030196597799658775, "outcome": "passed"}, "call": {"duration": 0.00036351708695292473, "outcome": "passed"}, "teardown": {"duration": 0.0002492847852408886, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_empty_algorithm_registry", "lineno": 481, "outcome": "passed", "keywords": ["test_empty_algorithm_registry", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00029377592727541924, "outcome": "passed"}, "call": {"duration": 0.0005404110997915268, "outcome": "passed"}, "teardown": {"duration": 0.00022702524438500404, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_invalid_force_algorithm", "lineno": 492, "outcome": "passed", "keywords": ["test_invalid_force_algorithm", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00028605619445443153, "outcome": "passed"}, "call": {"duration": 0.005491552874445915, "outcome": "passed"}, "teardown": {"duration": 0.0003346269950270653, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_performance_with_zero_episodes", "lineno": 501, "outcome": "failed", "keywords": ["test_performance_with_zero_episodes", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00032460596412420273, "outcome": "passed"}, "call": {"duration": 0.0006993748247623444, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/core/test_algorithm_selector.py", "lineno": 510, "message": "assert 0.1 == 0.0"}, "longrepr": "E   assert 0.1 == 0.0"}, "teardown": {"duration": 0.0003511672839522362, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_task_hash_consistency", "lineno": 511, "outcome": "passed", "keywords": ["test_task_hash_consistency", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.000299996230751276, "outcome": "passed"}, "call": {"duration": 0.0006335130892693996, "outcome": "passed"}, "teardown": {"duration": 0.0003053369000554085, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_rl_state_creation", "lineno": 7, "outcome": "passed", "keywords": ["test_rl_state_creation", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0006032730452716351, "outcome": "passed"}, "call": {"duration": 0.0004701088182628155, "outcome": "passed"}, "teardown": {"duration": 0.00029122596606612206, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_rl_action_creation", "lineno": 23, "outcome": "passed", "keywords": ["test_rl_action_creation", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0004203678108751774, "outcome": "passed"}, "call": {"duration": 0.0006032129749655724, "outcome": "passed"}, "teardown": {"duration": 0.0002985857427120209, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_rl_reward_creation", "lineno": 36, "outcome": "passed", "keywords": ["test_rl_reward_creation", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00046517979353666306, "outcome": "passed"}, "call": {"duration": 0.0003476068377494812, "outcome": "passed"}, "teardown": {"duration": 0.00029628584161400795, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_replay_buffer", "lineno": 49, "outcome": "passed", "keywords": ["test_replay_buffer", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002791057340800762, "outcome": "passed"}, "call": {"duration": 0.0009616399183869362, "outcome": "passed"}, "teardown": {"duration": 0.0002908557653427124, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_covariance_calculation", "lineno": 11, "outcome": "passed", "keywords": ["test_covariance_calculation", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.000334947369992733, "outcome": "passed"}, "call": {"duration": 0.001608304213732481, "outcome": "passed", "stdout": "\u2705 Covariance calculation: Mean=0.1667, Std=0.1490\n"}, "teardown": {"duration": 0.000324946828186512, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_percentile_threshold", "lineno": 42, "outcome": "passed", "keywords": ["test_percentile_threshold", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.000314916018396616, "outcome": "passed"}, "call": {"duration": 0.027045535389333963, "outcome": "passed", "stdout": "\u2705 Percentile threshold: Found 0.130% outliers (expected ~0.2%)\n"}, "teardown": {"duration": 0.00027077458798885345, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_fake_all_high_cov", "lineno": 86, "outcome": "passed", "keywords": ["test_fake_all_high_cov", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00022876402363181114, "outcome": "passed"}, "call": {"duration": 0.0018166471272706985, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.00021275505423545837, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_torch_tensor_support", "lineno": 105, "outcome": "passed", "keywords": ["test_torch_tensor_support", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00021452410146594048, "outcome": "passed"}, "call": {"duration": 0.001369577832520008, "outcome": "passed"}, "teardown": {"duration": 0.00019834376871585846, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_adaptive_threshold", "lineno": 121, "outcome": "passed", "keywords": ["test_adaptive_threshold", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002023237757384777, "outcome": "passed"}, "call": {"duration": 0.0002457951195538044, "outcome": "passed"}, "teardown": {"duration": 0.0001997840590775013, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_distribution_analysis", "lineno": 139, "outcome": "passed", "keywords": ["test_distribution_analysis", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00019556516781449318, "outcome": "passed"}, "call": {"duration": 0.0022552269510924816, "outcome": "passed"}, "teardown": {"duration": 0.00018328381702303886, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_history_tracking", "lineno": 165, "outcome": "passed", "keywords": ["test_history_tracking", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00026398617774248123, "outcome": "passed"}, "call": {"duration": 0.0010520019568502903, "outcome": "passed"}, "teardown": {"duration": 0.0002070036716759205, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_real_rl_scenario", "lineno": 185, "outcome": "failed", "keywords": ["test_real_rl_scenario", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00023160502314567566, "outcome": "passed"}, "call": {"duration": 0.07039022631943226, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/core/test_covariance_analyzer.py", "lineno": 231, "message": "AssertionError: No variation in outlier ratios\nassert np.float64(0.0) > 0"}, "longrepr": "E   AssertionError: No variation in outlier ratios\n    assert np.float64(0.0) > 0"}, "teardown": {"duration": 0.00026619620621204376, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_aware_selection", "lineno": 16, "outcome": "passed", "keywords": ["test_entropy_aware_selection", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0006570629775524139, "outcome": "passed"}, "call": {"duration": 0.056686894968152046, "outcome": "passed", "stdout": "\u2713 Normal selection: PPOAgent\n\u2713 Low entropy selection: KLCovPPO\n\u2713 Critical entropy selection: EntropyAwarePPO\n", "log": [{"name": "rl_commons.core.entropy_aware_selector", "msg": "Entropy intervention needed: entropy=0.300, risk=0.80", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 236, "funcName": "select_algorithm", "created": 1749079895.0219991, "msecs": 21.0, "relativeCreated": 32895.00093460083, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.core.entropy_aware_selector", "msg": "Entropy intervention needed: entropy=0.200, risk=0.90", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 236, "funcName": "select_algorithm", "created": 1749079895.0514803, "msecs": 51.0, "relativeCreated": 32924.482107162476, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}]}, "teardown": {"duration": 0.00028084637597203255, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_health_tracking", "lineno": 85, "outcome": "passed", "keywords": ["test_entropy_health_tracking", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00021756486967206, "outcome": "passed"}, "call": {"duration": 0.011337473057210445, "outcome": "passed", "stdout": "\u2713 Entropy health tracking verified\n"}, "teardown": {"duration": 0.00028004636988043785, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_algorithm_switching", "lineno": 127, "outcome": "passed", "keywords": ["test_algorithm_switching", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.000284325797110796, "outcome": "passed"}, "call": {"duration": 0.0121995210647583, "outcome": "passed", "stdout": "\u2713 Algorithm switching logic verified\n", "log": [{"name": "rl_commons.core.entropy_aware_selector", "msg": "Switching from PPOAgent due to entropy collapse risk: 0.87", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 388, "funcName": "should_switch_algorithm", "created": 1749079895.0915577, "msecs": 91.0, "relativeCreated": 32964.55955505371, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}, {"name": "rl_commons.core.entropy_aware_selector", "msg": "Switching from PPOAgent due to entropy collapse risk: 0.87", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 388, "funcName": "should_switch_algorithm", "created": 1749079895.0919242, "msecs": 91.0, "relativeCreated": 32964.92600440979, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}]}, "teardown": {"duration": 0.00031723687425255775, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_intervention_recommendations", "lineno": 190, "outcome": "passed", "keywords": ["test_intervention_recommendations", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002153441309928894, "outcome": "passed"}, "call": {"duration": 0.013487098272889853, "outcome": "passed", "stdout": "\u2713 Entropy 1.5: none intervention\n\u2713 Entropy 0.4: high intervention\n\u2713 Entropy 0.2: high intervention\n\u2713 Entropy 0.05: immediate intervention\n"}, "teardown": {"duration": 0.00030314596369862556, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_statistics", "lineno": 234, "outcome": "passed", "keywords": ["test_entropy_statistics", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002893456257879734, "outcome": "passed"}, "call": {"duration": 0.06101741408929229, "outcome": "passed", "stdout": "\u2713 Entropy statistics: {'total_agents_tracked': 4, 'healthy_agents': 2, 'at_risk_agents': 1, 'collapsed_agents': 1, 'average_entropy': np.float64(0.6749999999999999), 'average_collapse_risk': np.float64(0.4), 'agents_needing_intervention': ['agent_3']}\n"}, "teardown": {"duration": 0.00025917496532201767, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_fake_always_healthy", "lineno": 273, "outcome": "passed", "keywords": ["test_fake_always_healthy", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002530748024582863, "outcome": "passed"}, "call": {"duration": 0.014405625872313976, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.0002689650282263756, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimizer_initialization", "lineno": 16, "outcome": "passed", "keywords": ["test_optimizer_initialization", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0008921381086111069, "outcome": "passed"}, "call": {"duration": 0.005496643017977476, "outcome": "passed"}, "teardown": {"duration": 0.00026308605447411537, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_state_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_state_creation", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00023692520335316658, "outcome": "passed"}, "call": {"duration": 0.011021216865628958, "outcome": "passed"}, "teardown": {"duration": 0.00021172501146793365, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_parameter_normalization", "lineno": 55, "outcome": "passed", "keywords": ["test_parameter_normalization", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002405550330877304, "outcome": "passed"}, "call": {"duration": 0.0004550190642476082, "outcome": "passed"}, "teardown": {"duration": 0.00025767507031559944, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimization_step", "lineno": 76, "outcome": "passed", "keywords": ["test_optimization_step", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002538156695663929, "outcome": "passed"}, "call": {"duration": 0.012204930651932955, "outcome": "passed"}, "teardown": {"duration": 0.00027004629373550415, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_calculation", "lineno": 106, "outcome": "passed", "keywords": ["test_reward_calculation", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002989363856613636, "outcome": "passed"}, "call": {"duration": 0.01178716216236353, "outcome": "passed"}, "teardown": {"duration": 0.00029723625630140305, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_with_degradation", "lineno": 142, "outcome": "failed", "keywords": ["test_reward_with_degradation", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00026382599025964737, "outcome": "passed"}, "call": {"duration": 0.011064717080444098, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/integrations/test_arangodb_optimizer.py", "lineno": 174, "message": "AssertionError: assert np.float64(0.2946666666666667) < 0\n +  where np.float64(0.2946666666666667) = RLReward(value=np.float64(0.2946666666666667), components={'latency': np.float64(0.33333333333333326), 'throughput': np.float64(0.6000000000000001), 'resources': -0.2499999999999999, 'errors': -0.05, 'cache': 0.21}).value"}, "longrepr": "E   AssertionError: assert np.float64(0.2946666666666667) < 0\n     +  where np.float64(0.2946666666666667) = RLReward(value=np.float64(0.2946666666666667), components={'latency': np.float64(0.33333333333333326), 'throughput': np.float64(0.6000000000000001), 'resources': -0.2499999999999999, 'errors': -0.05, 'cache': 0.21}).value"}, "teardown": {"duration": 0.00024356506764888763, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_full_optimization_loop", "lineno": 179, "outcome": "failed", "keywords": ["test_full_optimization_loop", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00022659404203295708, "outcome": "passed"}, "call": {"duration": 0.01786927692592144, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/integrations/test_arangodb_optimizer.py", "lineno": 225, "message": "assert 0 > 0"}, "longrepr": "E   assert 0 > 0"}, "teardown": {"duration": 0.0004450492560863495, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_save_load_model", "lineno": 226, "outcome": "passed", "keywords": ["test_save_load_model", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00024308497086167336, "outcome": "passed"}, "call": {"duration": 0.038897308986634016, "outcome": "passed"}, "teardown": {"duration": 0.0002503851428627968, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::test_integration_validation", "lineno": 261, "outcome": "passed", "keywords": ["test_integration_validation", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00024341512471437454, "outcome": "passed"}, "call": {"duration": 0.01151439594104886, "outcome": "passed", "stdout": "============================================================\n\ud83e\uddea ARANGODB OPTIMIZER VALIDATION\n============================================================\n\n\ud83d\udccb Test 1: Basic optimizer functionality\n\u2705 PASS\n\n\ud83d\udccb Test 2: Reward calculation\n\u2705 PASS\n\n============================================================\nTotal: 2, Passed: 2, Failed: 0\n\n\u2705 ALL TESTS PASSED\n"}, "teardown": {"duration": 0.00021900376304984093, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_registration", "lineno": 24, "outcome": "failed", "keywords": ["test_module_registration", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00025892630219459534, "outcome": "passed"}, "call": {"duration": 0.0004822700284421444, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.0001911441795527935, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_orchestrator_creation", "lineno": 48, "outcome": "failed", "keywords": ["test_orchestrator_creation", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00018825381994247437, "outcome": "passed"}, "call": {"duration": 0.000402878038585186, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00018509430810809135, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_state_update", "lineno": 69, "outcome": "failed", "keywords": ["test_module_state_update", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019943434745073318, "outcome": "passed"}, "call": {"duration": 0.0004164292477071285, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00044467905536293983, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_request_routing", "lineno": 95, "outcome": "failed", "keywords": ["test_request_routing", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00020921509712934494, "outcome": "passed"}, "call": {"duration": 0.0003990083932876587, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00021894462406635284, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_performance_tracking", "lineno": 145, "outcome": "failed", "keywords": ["test_performance_tracking", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0001927441917359829, "outcome": "passed"}, "call": {"duration": 0.00038588792085647583, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.0001904941163957119, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_objective_orchestration", "lineno": 185, "outcome": "failed", "keywords": ["test_multi_objective_orchestration", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00020033493638038635, "outcome": "passed"}, "call": {"duration": 0.0004183882847428322, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00018388405442237854, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_should_rebalance", "lineno": 201, "outcome": "failed", "keywords": ["test_should_rebalance", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0003588772378861904, "outcome": "passed"}, "call": {"duration": 0.0003692479804158211, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00038291793316602707, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_async_request_handling", "lineno": 242, "outcome": "skipped", "keywords": ["test_async_request_handling", "asyncio", "pytestmark", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00022112485021352768, "outcome": "passed"}, "call": {"duration": 0.00048707984387874603, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py', 149, 'Skipped: async def function and no async plugin installed (see warnings)')"}, "teardown": {"duration": 0.00018573366105556488, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_curriculum_creation", "lineno": 276, "outcome": "failed", "keywords": ["test_curriculum_creation", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00020169373601675034, "outcome": "passed"}, "call": {"duration": 0.0004509901627898216, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00018734298646450043, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_agent_setup", "lineno": 289, "outcome": "failed", "keywords": ["test_multi_agent_setup", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00021053384989500046, "outcome": "passed"}, "call": {"duration": 0.0006238729692995548, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.0001970338635146618, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_gnn_orchestrator", "lineno": 300, "outcome": "failed", "keywords": ["test_gnn_orchestrator", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019140401855111122, "outcome": "passed"}, "call": {"duration": 0.0003550783731043339, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00019119400531053543, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_integration_statistics", "lineno": 310, "outcome": "failed", "keywords": ["test_integration_statistics", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019915355369448662, "outcome": "passed"}, "call": {"duration": 0.00038573797792196274, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.00019902409985661507, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_to_features", "lineno": 335, "outcome": "passed", "keywords": ["test_to_features", "TestModuleState", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002176547423005104, "outcome": "passed"}, "call": {"duration": 0.00029140571132302284, "outcome": "passed"}, "teardown": {"duration": 0.00018666358664631844, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_is_available", "lineno": 358, "outcome": "passed", "keywords": ["test_is_available", "TestModuleState", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019461382180452347, "outcome": "passed"}, "call": {"duration": 0.00025179609656333923, "outcome": "passed"}, "teardown": {"duration": 0.00018772436305880547, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest::test_matches_capabilities", "lineno": 391, "outcome": "passed", "keywords": ["test_matches_capabilities", "TestModuleRequest", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0001977141946554184, "outcome": "passed"}, "call": {"duration": 0.0002634958364069462, "outcome": "passed"}, "teardown": {"duration": 0.0002086348831653595, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_e2e_pdf_processing_pipeline", "lineno": 428, "outcome": "failed", "keywords": ["test_e2e_pdf_processing_pipeline", "TestE2EIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00020586419850587845, "outcome": "passed"}, "call": {"duration": 0.00042724842205643654, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.0001994837075471878, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_algorithm_switching", "lineno": 527, "outcome": "failed", "keywords": ["test_algorithm_switching", "TestE2EIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019940407946705818, "outcome": "passed"}, "call": {"duration": 0.00035673705860972404, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 592, "message": "TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "longrepr": "E   TypeError: ProgressiveCurriculum.__init__() got an unexpected keyword argument 'initial_success_threshold'"}, "teardown": {"duration": 0.0002009635791182518, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_ppo_entropy_tracking", "lineno": 48, "outcome": "failed", "keywords": ["test_ppo_entropy_tracking", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.0009052082896232605, "outcome": "passed"}, "call": {"duration": 0.6801694137975574, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 128, "message": "AssertionError: Final entropy 1.489070439338684 not in expected range\nassert np.float64(1.489070439338684) < 0.7"}, "longrepr": "E   AssertionError: Final entropy 1.489070439338684 not in expected range\n    assert np.float64(1.489070439338684) < 0.7"}, "teardown": {"duration": 0.0003038160502910614, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_collapse_detection", "lineno": 135, "outcome": "failed", "keywords": ["test_collapse_detection", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00023180479183793068, "outcome": "passed"}, "call": {"duration": 0.03242193581536412, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 176, "message": "assert np.float64(0.640263440861928) > 0.8\n +  where np.float64(0.640263440861928) = EntropyMetrics(current=0.16028472844140665, mean=np.float64(0.14034156957060456), std=np.float64(0.01694715799800776),...702816), max=np.float64(0.18454351292038165), trend=0.0006320698579506119, collapse_risk=np.float64(0.640263440861928)).collapse_risk"}, "stdout": "Collapse detected at step 45, entropy=0.458\nCollapse detected at step 45, entropy=0.397\nCollapse detected at step 45, entropy=0.335\nCollapse detected at step 45, entropy=0.273\nCollapse detected at step 45, entropy=0.212\nCollapse detected at step 45, entropy=0.132\nCollapse detected at step 45, entropy=0.118\nCollapse detected at step 45, entropy=0.149\nCollapse detected at step 45, entropy=0.151\nCollapse detected at step 45, entropy=0.156\nCollapse detected at step 45, entropy=0.165\nCollapse detected at step 45, entropy=0.168\nCollapse detected at step 45, entropy=0.125\nCollapse detected at step 45, entropy=0.109\nCollapse detected at step 45, entropy=0.159\nCollapse detected at step 45, entropy=0.151\nCollapse detected at step 45, entropy=0.141\nCollapse detected at step 45, entropy=0.147\nCollapse detected at step 45, entropy=0.133\nCollapse detected at step 45, entropy=0.185\nCollapse detected at step 45, entropy=0.110\nCollapse detected at step 45, entropy=0.158\nCollapse detected at step 45, entropy=0.124\nCollapse detected at step 45, entropy=0.137\nCollapse detected at step 45, entropy=0.141\nCollapse detected at step 45, entropy=0.130\nCollapse detected at step 45, entropy=0.145\nCollapse detected at step 45, entropy=0.097\nCollapse detected at step 45, entropy=0.119\nCollapse detected at step 45, entropy=0.113\nCollapse detected at step 45, entropy=0.126\nCollapse detected at step 45, entropy=0.134\nCollapse detected at step 45, entropy=0.150\nCollapse detected at step 45, entropy=0.137\nCollapse detected at step 45, entropy=0.133\nCollapse detected at step 45, entropy=0.140\nCollapse detected at step 45, entropy=0.136\nCollapse detected at step 45, entropy=0.143\nCollapse detected at step 45, entropy=0.143\nCollapse detected at step 45, entropy=0.134\nCollapse detected at step 45, entropy=0.118\nCollapse detected at step 45, entropy=0.149\nCollapse detected at step 45, entropy=0.167\nCollapse detected at step 45, entropy=0.129\nCollapse detected at step 45, entropy=0.148\nCollapse detected at step 45, entropy=0.141\nCollapse detected at step 45, entropy=0.162\nCollapse detected at step 45, entropy=0.133\nCollapse detected at step 45, entropy=0.146\nCollapse detected at step 45, entropy=0.148\nCollapse detected at step 45, entropy=0.155\nCollapse detected at step 45, entropy=0.128\nCollapse detected at step 45, entropy=0.156\nCollapse detected at step 45, entropy=0.139\nCollapse detected at step 45, entropy=0.160\n", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 45! Entropy dropped from 2.0235 to 0.4583", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749079896.0836282, "msecs": 83.0, "relativeCreated": 33956.62999153137, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}], "longrepr": "E   assert np.float64(0.640263440861928) > 0.8\n     +  where np.float64(0.640263440861928) = EntropyMetrics(current=0.16028472844140665, mean=np.float64(0.14034156957060456), std=np.float64(0.01694715799800776),...702816), max=np.float64(0.18454351292038165), trend=0.0006320698579506119, collapse_risk=np.float64(0.640263440861928)).collapse_risk"}, "teardown": {"duration": 0.0002152537927031517, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_fake_constant_entropy", "lineno": 180, "outcome": "failed", "keywords": ["test_fake_constant_entropy", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00019723409786820412, "outcome": "passed"}, "call": {"duration": 0.026750630233436823, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 199, "message": "AssertionError: HONEYPOT FAILED: Entropy has unrealistic zero variance\nassert np.float64(0.0) > 0.01\n +  where np.float64(0.0) = EntropyMetrics(current=1.5, mean=np.float64(1.5), std=np.float64(0.0), min=np.float64(1.5), max=np.float64(1.5), trend=-1.72849331418309e-17, collapse_risk=np.float64(5.7616443806103e-17)).std"}, "longrepr": "E   AssertionError: HONEYPOT FAILED: Entropy has unrealistic zero variance\n    assert np.float64(0.0) > 0.01\n     +  where np.float64(0.0) = EntropyMetrics(current=1.5, mean=np.float64(1.5), std=np.float64(0.0), min=np.float64(1.5), max=np.float64(1.5), trend=-1.72849331418309e-17, collapse_risk=np.float64(5.7616443806103e-17)).std"}, "teardown": {"duration": 0.0001923837698996067, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_metrics_calculation", "lineno": 205, "outcome": "passed", "keywords": ["test_entropy_metrics_calculation", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00019317399710416794, "outcome": "passed"}, "call": {"duration": 0.0029030703008174896, "outcome": "passed", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 8! Entropy dropped from 2.0000 to 0.4000", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749079896.1378841, "msecs": 137.0, "relativeCreated": 34010.8859539032, "thread": 128960332235072, "threadName": "MainThread", "processName": "MainProcess", "process": 4033713, "taskName": null}]}, "teardown": {"duration": 0.0001865536905825138, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_recovery_recommendations", "lineno": 224, "outcome": "failed", "keywords": ["test_recovery_recommendations", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00018693367019295692, "outcome": "passed"}, "call": {"duration": 0.0011612633243203163, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 245, "message": "AssertionError: assert 'below healthy threshold' in 'High collapse risk! Consider: 1) Reduce learning rate, 2) Add entropy bonus, 3) Increase exploration'"}, "longrepr": "E   AssertionError: assert 'below healthy threshold' in 'High collapse risk! Consider: 1) Reduce learning rate, 2) Add entropy bonus, 3) Increase exploration'"}, "teardown": {"duration": 0.00018172385171055794, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_persistence", "lineno": 249, "outcome": "passed", "keywords": ["test_entropy_persistence", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00019003404304385185, "outcome": "passed"}, "call": {"duration": 0.015461767558008432, "outcome": "passed"}, "teardown": {"duration": 0.0001784241758286953, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_real_ppo_integration", "lineno": 282, "outcome": "failed", "keywords": ["test_real_ppo_integration", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.0001917639747262001, "outcome": "passed"}, "call": {"duration": 0.00029368605464696884, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 288, "message": "ImportError: cannot import name 'PPOConfig' from 'rl_commons.algorithms.ppo.ppo' (/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/ppo/ppo.py)"}, "longrepr": "E   ImportError: cannot import name 'PPOConfig' from 'rl_commons.algorithms.ppo.ppo' (/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/ppo/ppo.py)"}, "teardown": {"duration": 0.0004756101407110691, "outcome": "passed"}}], "warnings": [{"message": "Expected None, but tests/algorithms/a3c/test_a3c.py::test_a3c_integration returned 1, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/a3c/test_a3c_simple.py::test_a3c_components returned 1, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Using backward() with create_graph=True will create a reference cycle between the parameter and its gradient which can cause a memory leak. We recommend using autograd.grad when creating the graph to avoid this. If you have to use this function, make sure to reset the .grad fields of your parameters to None after use to break the cycle and avoid the leak. (Triggered internally at /pytorch/torch/csrc/autograd/engine.cpp:1273.)", "category": "UserWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/torch/autograd/graph.py", "lineno": 824}, {"message": "Expected None, but tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_module_graph_forward returned {'duration': 0.047342777252197266, 'num_modules': 10, 'num_edges': 42, 'embedding_dim': 128, 'forward_time': 0.047342777252197266, 'graph_stats': {'num_nodes': 10, 'num_edges': 42, 'density': 0.4666666666666667, 'avg_degree': np.float64(8.4), 'max_degree': 12, 'min_degree': 4, 'num_updates': 31}}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_dynamic_graph returned {'duration': 0.003532886505126953, 'modules_added': 37, 'modules_removed': 11, 'edges_modified': 103, 'final_num_nodes': 26, 'final_num_edges': 98, 'graph_density': 0.15076923076923077, 'avg_degree': np.float64(7.538461538461538), 'total_updates': 173, 'avg_update_time': np.float64(4.4420787266322545e-05), 'max_update_time': np.float64(0.00013828277587890625)}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_imitate_routing_policy returned {'duration': 1.8633618354797363, 'train_accuracy': 0.5697916666666667, 'val_accuracy': 0.475, 'test_accuracy': 0.47, 'final_train_loss': 0.9449228922526042, 'epochs_trained': 50}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestHoneypot::test_wrong_action_space returned {'status': 'FAKE', 'reason': 'Wrong action space should fail'}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Mean of empty slice.", "category": "RuntimeWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/numpy/_core/fromnumeric.py", "lineno": 3860}, {"message": "invalid value encountered in scalar divide", "category": "RuntimeWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/numpy/_core/_methods.py", "lineno": 145}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestHoneypot::test_empty_demonstrations returned {'status': 'FAKE', 'reason': 'Empty demonstrations should fail'}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /pytorch/torch/csrc/utils/tensor_new.cpp:254.)", "category": "UserWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/marl/independent_q.py", "lineno": 182}, {"message": "Expected None, but tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_multi_agent_coordination returned {'duration': 18.159363269805908, 'num_agents': 3, 'episodes': 50, 'initial_reward': 2065.72282049815, 'final_reward': 2170.299279327187, 'reward_improvement': 104.57645882903671, 'initial_coordination_distance': 0.681347668170929, 'final_coordination_distance': 0.5866565108299255, 'coordination_improvement': 0.09469115734100342, 'total_coordination_attempts': 9031, 'successful_coordinations': 25650, 'coordination_success_rate': 2.8402170302292107}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_agent_communication returned {'duration': 0.005663156509399414, 'num_agents': 4, 'messages_sent': 20, 'messages_received': 130, 'broadcast_messages': 10, 'burst_sent': 100, 'burst_dropped': 0, 'burst_duration': 0.0002722740173339844, 'total_messages': 130, 'total_dropped': 0, 'drop_rate': 0.0}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_as_objective returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_pareto_with_entropy returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_weight_adaptation returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_preference_balance returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_metrics_reporting returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_entropy_aware_selection returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_entropy_health_tracking returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_algorithm_switching returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_intervention_recommendations returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_entropy_statistics returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/integrations/test_arangodb_optimizer.py::test_integration_validation returned 0, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "async def functions are not natively supported and have been skipped.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted", "category": "PytestUnhandledCoroutineWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 148}]}