{"created": 1749083520.0813885, "duration": 16.597715854644775, "exitcode": 1, "root": "/home/graham/workspace/experiments/rl_commons", "environment": {}, "summary": {"passed": 119, "failed": 35, "skipped": 1, "total": 155, "collected": 157, "deselected": 2}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_discrete", "type": "Function", "lineno": 19}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_continuous", "type": "Function", "lineno": 41}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_a3c_config", "type": "Function", "lineno": 63}]}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_agent_initialization", "type": "Function", "lineno": 80}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_discrete", "type": "Function", "lineno": 94}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_continuous", "type": "Function", "lineno": 115}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_save_load", "type": "Function", "lineno": 137}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_metrics", "type": "Function", "lineno": 169}]}, {"nodeid": "tests/algorithms/a3c/test_a3c.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents", "type": "Class"}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent", "type": "Class"}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::test_a3c_integration", "type": "Function", "lineno": 186, "deselected": true}]}, {"nodeid": "tests/algorithms/a3c/test_a3c_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c_simple.py::test_a3c_components", "type": "Function", "lineno": 15}]}, {"nodeid": "tests/algorithms/a3c", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c/test_a3c.py", "type": "Module"}, {"nodeid": "tests/algorithms/a3c/test_a3c_simple.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/bandits", "outcome": "passed", "result": []}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_creation", "type": "Function", "lineno": 34}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_difficulty_validation", "type": "Function", "lineno": 48}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_serialization", "type": "Function", "lineno": 56}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_performance_recording", "type": "Function", "lineno": 79}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_global_performance", "type": "Function", "lineno": 99}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_readiness_score", "type": "Function", "lineno": 110}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_automatic_task_generation", "type": "Function", "lineno": 131}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_performance_based_selection", "type": "Function", "lineno": 147}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_task_generator_integration", "type": "Function", "lineno": 165}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_smooth_progression", "type": "Function", "lineno": 187}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_zone_of_proximal_development", "type": "Function", "lineno": 225}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_mastery_tracking", "type": "Function", "lineno": 241}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_learner_profile_update", "type": "Function", "lineno": 262}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_performance_prediction", "type": "Function", "lineno": 294}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_adaptive_parameters", "type": "Function", "lineno": 315}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_task_generation", "type": "Function", "lineno": 335}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_curriculum_integration", "type": "Function", "lineno": 363}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_domain_adaptation", "type": "Function", "lineno": 390}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_update_scheduling", "type": "Function", "lineno": 410}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_curriculum_with_real_agent", "type": "Function", "lineno": 437}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_module_orchestration_scenario", "type": "Function", "lineno": 493}]}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum", "type": "Class"}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration", "type": "Class"}]}, {"nodeid": "tests/algorithms/curriculum", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/curriculum/test_curriculum.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/dqn", "outcome": "passed", "result": []}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_module_graph_forward", "type": "Function", "lineno": 155}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_dynamic_graph", "type": "Function", "lineno": 215}]}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration::test_gnn_dqn_learning", "type": "Function", "lineno": 312}]}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot::test_static_graph", "type": "Function", "lineno": 406}]}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration", "type": "Class"}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration", "type": "Class"}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/gnn", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/gnn/test_gnn_integration.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/hierarchical", "outcome": "passed", "result": []}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_learn_module_routing", "type": "Function", "lineno": 102}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_reward_function_properties", "type": "Function", "lineno": 160}]}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_imitate_routing_policy", "type": "Function", "lineno": 209}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_continuous_action_cloning", "type": "Function", "lineno": 280}]}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL::test_discriminator_training", "type": "Function", "lineno": 327}]}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_wrong_action_space", "type": "Function", "lineno": 404}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_empty_demonstrations", "type": "Function", "lineno": 420}]}, {"nodeid": "tests/algorithms/irl/test_irl.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL", "type": "Class"}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning", "type": "Class"}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL", "type": "Class"}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/irl", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/irl/test_irl.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_multi_agent_coordination", "type": "Function", "lineno": 235, "deselected": true}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_agent_communication", "type": "Function", "lineno": 366}]}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot::test_fake_multi_agent", "type": "Function", "lineno": 493}]}, {"nodeid": "tests/algorithms/marl/test_coordination.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination", "type": "Class"}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/marl", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/marl/test_coordination.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_few_shot_adaptation", "type": "Function", "lineno": 104}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_meta_training", "type": "Function", "lineno": 198}]}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent::test_maml_agent_adaptation", "type": "Function", "lineno": 284}]}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot::test_no_adaptation", "type": "Function", "lineno": 365}]}, {"nodeid": "tests/algorithms/meta/test_maml.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML", "type": "Class"}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent", "type": "Class"}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/algorithms/meta", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/meta/test_maml.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_as_objective", "type": "Function", "lineno": 15}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_pareto_with_entropy", "type": "Function", "lineno": 65}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_weight_adaptation", "type": "Function", "lineno": 126}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_preference_balance", "type": "Function", "lineno": 181}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_metrics_reporting", "type": "Function", "lineno": 219}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_fake_ignore_entropy", "type": "Function", "lineno": 264}]}, {"nodeid": "tests/algorithms/morl", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py", "type": "Module"}]}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_cartpole_training", "type": "Function", "lineno": 17}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_gradient_detachment", "type": "Function", "lineno": 124}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_fake_instant_convergence", "type": "Function", "lineno": 167}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_asymmetric_clipping", "type": "Function", "lineno": 197}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_adaptive_entropy_coefficient", "type": "Function", "lineno": 217}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_entropy_preservation", "type": "Function", "lineno": 253}]}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_penalty", "type": "Function", "lineno": 17}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_entropy_preservation", "type": "Function", "lineno": 89}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_fake_zero_kl", "type": "Function", "lineno": 145}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_scaling_by_covariance", "type": "Function", "lineno": 186}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_dynamic_kl_adaptation", "type": "Function", "lineno": 240}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_comparison_with_clip_cov", "type": "Function", "lineno": 291}]}, {"nodeid": "tests/algorithms/ppo/test_ppo.py", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_continuous", "type": "Function", "lineno": 10}, {"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_discrete", "type": "Function", "lineno": 70}]}, {"nodeid": "tests/algorithms/ppo", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py", "type": "Module"}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py", "type": "Module"}, {"nodeid": "tests/algorithms/ppo/test_ppo.py", "type": "Module"}]}, {"nodeid": "tests/algorithms", "outcome": "passed", "result": [{"nodeid": "tests/algorithms/a3c", "type": "Package"}, {"nodeid": "tests/algorithms/bandits", "type": "Package"}, {"nodeid": "tests/algorithms/curriculum", "type": "Package"}, {"nodeid": "tests/algorithms/dqn", "type": "Package"}, {"nodeid": "tests/algorithms/gnn", "type": "Package"}, {"nodeid": "tests/algorithms/hierarchical", "type": "Package"}, {"nodeid": "tests/algorithms/irl", "type": "Package"}, {"nodeid": "tests/algorithms/marl", "type": "Package"}, {"nodeid": "tests/algorithms/meta", "type": "Package"}, {"nodeid": "tests/algorithms/morl", "type": "Dir"}, {"nodeid": "tests/algorithms/ppo", "type": "Package"}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_result_creation", "type": "Function", "lineno": 35}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_creation", "type": "Function", "lineno": 55}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_custom_benchmark", "type": "Function", "lineno": 62}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_execution", "type": "Function", "lineno": 86}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_comparison", "type": "Function", "lineno": 116}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_report_generation", "type": "Function", "lineno": 149}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_algorithm_benchmark_setup", "type": "Function", "lineno": 181}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_multi_objective_benchmark", "type": "Function", "lineno": 201}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_scalability_benchmark", "type": "Function", "lineno": 215}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks::test_module_orchestration_benchmark", "type": "Function", "lineno": 235}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_basic_profiling", "type": "Function", "lineno": 260}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_nested_profiling", "type": "Function", "lineno": 278}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_bottleneck_analysis", "type": "Function", "lineno": 295}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_report_generation", "type": "Function", "lineno": 321}]}, {"nodeid": "tests/benchmarks/test_benchmarks.py", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite", "type": "Class"}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks", "type": "Class"}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks", "type": "Class"}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler", "type": "Class"}]}, {"nodeid": "tests/benchmarks", "outcome": "passed", "result": [{"nodeid": "tests/benchmarks/test_benchmarks.py", "type": "Module"}]}, {"nodeid": "tests/cli", "outcome": "passed", "result": []}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_creation", "type": "Function", "lineno": 35}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_serialization", "type": "Function", "lineno": 50}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_module_context", "type": "Function", "lineno": 74}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_update", "type": "Function", "lineno": 90}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_score", "type": "Function", "lineno": 129}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_selector_initialization", "type": "Function", "lineno": 168}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_registration", "type": "Function", "lineno": 175}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_task_property_extraction", "type": "Function", "lineno": 208}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_discrete", "type": "Function", "lineno": 224}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_continuous", "type": "Function", "lineno": 241}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_force_algorithm_selection", "type": "Function", "lineno": 258}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_recommendations", "type": "Function", "lineno": 269}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_performance_tracking", "type": "Function", "lineno": 291}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_switching", "type": "Function", "lineno": 322}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_save_load_performance_history", "type": "Function", "lineno": 346}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_statistics", "type": "Function", "lineno": 383}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_create_module_context", "type": "Function", "lineno": 413}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_extract_module_characteristics", "type": "Function", "lineno": 425}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_module_aware_selection", "type": "Function", "lineno": 449}]}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_empty_algorithm_registry", "type": "Function", "lineno": 481}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_invalid_force_algorithm", "type": "Function", "lineno": 492}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_performance_with_zero_episodes", "type": "Function", "lineno": 501}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_task_hash_consistency", "type": "Function", "lineno": 511}]}, {"nodeid": "tests/core/test_algorithm_selector.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration", "type": "Class"}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases", "type": "Class"}]}, {"nodeid": "tests/core/test_base.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_base.py::test_rl_state_creation", "type": "Function", "lineno": 7}, {"nodeid": "tests/core/test_base.py::test_rl_action_creation", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/test_base.py::test_rl_reward_creation", "type": "Function", "lineno": 36}, {"nodeid": "tests/core/test_base.py::test_replay_buffer", "type": "Function", "lineno": 49}]}, {"nodeid": "tests/core/test_covariance_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_covariance_analyzer.py::test_covariance_calculation", "type": "Function", "lineno": 11}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_percentile_threshold", "type": "Function", "lineno": 42}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_fake_all_high_cov", "type": "Function", "lineno": 86}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_torch_tensor_support", "type": "Function", "lineno": 105}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_adaptive_threshold", "type": "Function", "lineno": 121}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_distribution_analysis", "type": "Function", "lineno": 139}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_history_tracking", "type": "Function", "lineno": 165}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_real_rl_scenario", "type": "Function", "lineno": 185}]}, {"nodeid": "tests/core/test_entropy_aware_selector.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_aware_selection", "type": "Function", "lineno": 16}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_health_tracking", "type": "Function", "lineno": 85}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_algorithm_switching", "type": "Function", "lineno": 127}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_intervention_recommendations", "type": "Function", "lineno": 190}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_statistics", "type": "Function", "lineno": 234}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_fake_always_healthy", "type": "Function", "lineno": 273}]}, {"nodeid": "tests/core", "outcome": "passed", "result": [{"nodeid": "tests/core/test_algorithm_selector.py", "type": "Module"}, {"nodeid": "tests/core/test_base.py", "type": "Module"}, {"nodeid": "tests/core/test_covariance_analyzer.py", "type": "Module"}, {"nodeid": "tests/core/test_entropy_aware_selector.py", "type": "Module"}]}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimizer_initialization", "type": "Function", "lineno": 16}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_state_creation", "type": "Function", "lineno": 29}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_parameter_normalization", "type": "Function", "lineno": 55}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimization_step", "type": "Function", "lineno": 76}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_calculation", "type": "Function", "lineno": 106}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_with_degradation", "type": "Function", "lineno": 142}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_full_optimization_loop", "type": "Function", "lineno": 179}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_save_load_model", "type": "Function", "lineno": 226}]}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer", "type": "Class"}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::test_integration_validation", "type": "Function", "lineno": 261}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_registration", "type": "Function", "lineno": 24}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_orchestrator_creation", "type": "Function", "lineno": 48}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_state_update", "type": "Function", "lineno": 69}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_request_routing", "type": "Function", "lineno": 95}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_performance_tracking", "type": "Function", "lineno": 145}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_objective_orchestration", "type": "Function", "lineno": 185}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_should_rebalance", "type": "Function", "lineno": 201}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_async_request_handling", "type": "Function", "lineno": 242}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_curriculum_creation", "type": "Function", "lineno": 276}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_agent_setup", "type": "Function", "lineno": 289}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_gnn_orchestrator", "type": "Function", "lineno": 300}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_integration_statistics", "type": "Function", "lineno": 310}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_to_features", "type": "Function", "lineno": 335}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_is_available", "type": "Function", "lineno": 358}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest::test_matches_capabilities", "type": "Function", "lineno": 391}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_e2e_pdf_processing_pipeline", "type": "Function", "lineno": 428}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_algorithm_switching", "type": "Function", "lineno": 527}]}, {"nodeid": "tests/integrations/test_module_communicator_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration", "type": "Class"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState", "type": "Class"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest", "type": "Class"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration", "type": "Class"}]}, {"nodeid": "tests/integrations", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_arangodb_optimizer.py", "type": "Module"}, {"nodeid": "tests/integrations/test_module_communicator_integration.py", "type": "Module"}]}, {"nodeid": "tests/monitoring/test_entropy_tracker.py", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_entropy_tracker.py::test_ppo_entropy_tracking", "type": "Function", "lineno": 48}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_collapse_detection", "type": "Function", "lineno": 136}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_fake_constant_entropy", "type": "Function", "lineno": 181}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_metrics_calculation", "type": "Function", "lineno": 206}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_recovery_recommendations", "type": "Function", "lineno": 225}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_persistence", "type": "Function", "lineno": 250}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_real_ppo_integration", "type": "Function", "lineno": 283}]}, {"nodeid": "tests/monitoring", "outcome": "passed", "result": [{"nodeid": "tests/monitoring/test_entropy_tracker.py", "type": "Module"}]}, {"nodeid": "tests/safety", "outcome": "passed", "result": []}, {"nodeid": "tests/utils", "outcome": "passed", "result": []}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/algorithms", "type": "Package"}, {"nodeid": "tests/benchmarks", "type": "Package"}, {"nodeid": "tests/cli", "type": "Package"}, {"nodeid": "tests/core", "type": "Package"}, {"nodeid": "tests/integrations", "type": "Package"}, {"nodeid": "tests/monitoring", "type": "Package"}, {"nodeid": "tests/safety", "type": "Package"}, {"nodeid": "tests/utils", "type": "Package"}]}], "tests": [{"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_discrete", "lineno": 19, "outcome": "passed", "keywords": ["test_actor_critic_network_discrete", "TestA3CComponents", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0006511332467198372, "outcome": "passed"}, "call": {"duration": 0.007717021740972996, "outcome": "passed"}, "teardown": {"duration": 0.00013337330892682076, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_actor_critic_network_continuous", "lineno": 41, "outcome": "passed", "keywords": ["test_actor_critic_network_continuous", "TestA3CComponents", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011435290798544884, "outcome": "passed"}, "call": {"duration": 0.0017329473048448563, "outcome": "passed"}, "teardown": {"duration": 0.00010408181697130203, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CComponents::test_a3c_config", "lineno": 63, "outcome": "passed", "keywords": ["test_a3c_config", "TestA3CComponents", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.880168363451958e-05, "outcome": "passed"}, "call": {"duration": 0.0001166430301964283, "outcome": "passed"}, "teardown": {"duration": 9.164214134216309e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_agent_initialization", "lineno": 80, "outcome": "passed", "keywords": ["test_agent_initialization", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.911181405186653e-05, "outcome": "passed"}, "call": {"duration": 1.2462183344177902, "outcome": "passed"}, "teardown": {"duration": 0.00013819336891174316, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_discrete", "lineno": 94, "outcome": "passed", "keywords": ["test_action_selection_discrete", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010901223868131638, "outcome": "passed"}, "call": {"duration": 0.009975609369575977, "outcome": "passed"}, "teardown": {"duration": 0.00010118167847394943, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_action_selection_continuous", "lineno": 115, "outcome": "passed", "keywords": ["test_action_selection_continuous", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.751180186867714e-05, "outcome": "passed"}, "call": {"duration": 0.009924778714776039, "outcome": "passed"}, "teardown": {"duration": 9.769201278686523e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_save_load", "lineno": 137, "outcome": "passed", "keywords": ["test_save_load", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.319093078374863e-05, "outcome": "passed"}, "call": {"duration": 0.02436642162501812, "outcome": "passed"}, "teardown": {"duration": 0.00013589300215244293, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c.py::TestA3CAgent::test_metrics", "lineno": 169, "outcome": "passed", "keywords": ["test_metrics", "TestA3CAgent", "test_a3c.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.981216862797737e-05, "outcome": "passed"}, "call": {"duration": 0.010831176768988371, "outcome": "passed"}, "teardown": {"duration": 0.00012561213225126266, "outcome": "passed"}}, {"nodeid": "tests/algorithms/a3c/test_a3c_simple.py::test_a3c_components", "lineno": 15, "outcome": "passed", "keywords": ["test_a3c_components", "test_a3c_simple.py", "a3c", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012328289449214935, "outcome": "passed"}, "call": {"duration": 0.05361200589686632, "outcome": "passed", "stdout": "============================================================\n\ud83e\uddea A3C COMPONENT TESTS\n============================================================\n\n\ud83d\udccb Test 1: Actor-Critic Network (Discrete Actions)\n\u2705 PASS - Network output shapes correct\n\n\ud83d\udccb Test 2: Actor-Critic Network (Continuous Actions)\n\u2705 PASS - Continuous network output shapes correct\n\n\ud83d\udccb Test 3: A3C Agent Creation\n\u2705 PASS - Agent created successfully\n\n\ud83d\udccb Test 4: Discrete Action Selection\n\u2705 PASS - Selected discrete action: 2\n\n\ud83d\udccb Test 5: Continuous Action Selection\n\u2705 PASS - Selected continuous action: [-1.3668268918991089, 0.5570843815803528]\n\n\ud83d\udccb Test 6: Save/Load Functionality\n\u2705 PASS - Save/load works correctly\n\n============================================================\nTotal: 6, Passed: 6, Failed: 0\n\n\u2705 ALL TESTS PASSED\n\n\ud83d\udcdd Note: Full multiprocessing training test skipped in simple mode\n"}, "teardown": {"duration": 0.00013387296348810196, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_creation", "lineno": 34, "outcome": "passed", "keywords": ["test_task_creation", "TestTask", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00032117683440446854, "outcome": "passed"}, "call": {"duration": 0.00012006331235170364, "outcome": "passed"}, "teardown": {"duration": 9.046215564012527e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_difficulty_validation", "lineno": 48, "outcome": "passed", "keywords": ["test_task_difficulty_validation", "TestTask", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.615199476480484e-05, "outcome": "passed"}, "call": {"duration": 0.00019110366702079773, "outcome": "passed"}, "teardown": {"duration": 8.036196231842041e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestTask::test_task_serialization", "lineno": 56, "outcome": "passed", "keywords": ["test_task_serialization", "TestTask", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.538179099559784e-05, "outcome": "passed"}, "call": {"duration": 9.97716560959816e-05, "outcome": "passed"}, "teardown": {"duration": 8.290214464068413e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_performance_recording", "lineno": 79, "outcome": "passed", "keywords": ["test_performance_recording", "TestPerformanceTracker", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.378177881240845e-05, "outcome": "passed"}, "call": {"duration": 0.00013789301738142967, "outcome": "passed"}, "teardown": {"duration": 7.883226498961449e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_global_performance", "lineno": 99, "outcome": "passed", "keywords": ["test_global_performance", "TestPerformanceTracker", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.32919031381607e-05, "outcome": "passed"}, "call": {"duration": 0.00020724395290017128, "outcome": "passed"}, "teardown": {"duration": 8.05417075753212e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestPerformanceTracker::test_readiness_score", "lineno": 110, "outcome": "passed", "keywords": ["test_readiness_score", "TestPerformanceTracker", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.268188685178757e-05, "outcome": "passed"}, "call": {"duration": 0.00025726575404405594, "outcome": "passed"}, "teardown": {"duration": 8.117174729704857e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_automatic_task_generation", "lineno": 131, "outcome": "passed", "keywords": ["test_automatic_task_generation", "TestAutomaticCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.840207010507584e-05, "outcome": "passed"}, "call": {"duration": 0.00029392587020993233, "outcome": "passed"}, "teardown": {"duration": 8.181203156709671e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_performance_based_selection", "lineno": 147, "outcome": "failed", "keywords": ["test_performance_based_selection", "TestAutomaticCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.61017033457756e-05, "outcome": "passed"}, "call": {"duration": 0.0017741769552230835, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/curriculum/test_curriculum.py", "lineno": 164, "message": "assert np.float64(0.09999999999999999) >= 0.1\n +  where np.float64(0.09999999999999999) = <rl_commons.algorithms.curriculum.automatic.AutomaticCurriculum object at 0x746afe95bb90>.current_focus_difficulty"}, "longrepr": "E   assert np.float64(0.09999999999999999) >= 0.1\n     +  where np.float64(0.09999999999999999) = <rl_commons.algorithms.curriculum.automatic.AutomaticCurriculum object at 0x746afe95bb90>.current_focus_difficulty"}, "teardown": {"duration": 0.0001063719391822815, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAutomaticCurriculum::test_task_generator_integration", "lineno": 165, "outcome": "passed", "keywords": ["test_task_generator_integration", "TestAutomaticCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.149080142378807e-05, "outcome": "passed"}, "call": {"duration": 0.0003709872253239155, "outcome": "passed"}, "teardown": {"duration": 8.289190009236336e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_smooth_progression", "lineno": 187, "outcome": "passed", "keywords": ["test_smooth_progression", "TestProgressiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.57221893966198e-05, "outcome": "passed"}, "call": {"duration": 0.00210121413692832, "outcome": "passed"}, "teardown": {"duration": 8.259201422333717e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_zone_of_proximal_development", "lineno": 225, "outcome": "passed", "keywords": ["test_zone_of_proximal_development", "TestProgressiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.760214015841484e-05, "outcome": "passed"}, "call": {"duration": 0.00015082303434610367, "outcome": "passed"}, "teardown": {"duration": 7.981108501553535e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestProgressiveCurriculum::test_mastery_tracking", "lineno": 241, "outcome": "passed", "keywords": ["test_mastery_tracking", "TestProgressiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.371192961931229e-05, "outcome": "passed"}, "call": {"duration": 0.000685845036059618, "outcome": "passed"}, "teardown": {"duration": 8.20821151137352e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_learner_profile_update", "lineno": 262, "outcome": "passed", "keywords": ["test_learner_profile_update", "TestAdaptiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 8.544186130166054e-05, "outcome": "passed"}, "call": {"duration": 0.06811627093702555, "outcome": "passed"}, "teardown": {"duration": 0.00013478286564350128, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_performance_prediction", "lineno": 294, "outcome": "passed", "keywords": ["test_performance_prediction", "TestAdaptiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011791195720434189, "outcome": "passed"}, "call": {"duration": 0.03147685108706355, "outcome": "passed"}, "teardown": {"duration": 0.00013338308781385422, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestAdaptiveCurriculum::test_adaptive_parameters", "lineno": 315, "outcome": "passed", "keywords": ["test_adaptive_parameters", "TestAdaptiveCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001101023517549038, "outcome": "passed"}, "call": {"duration": 0.0001911139115691185, "outcome": "passed"}, "teardown": {"duration": 9.588198736310005e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_task_generation", "lineno": 335, "outcome": "failed", "keywords": ["test_meta_task_generation", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010248180478811264, "outcome": "passed"}, "call": {"duration": 0.0008969176560640335, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/curriculum/test_curriculum.py", "lineno": 351, "message": "assert 25 < 25"}, "longrepr": "E   assert 25 < 25"}, "teardown": {"duration": 0.00010937266051769257, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_curriculum_integration", "lineno": 363, "outcome": "passed", "keywords": ["test_meta_curriculum_integration", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001032133586704731, "outcome": "passed"}, "call": {"duration": 0.0028911810368299484, "outcome": "passed"}, "teardown": {"duration": 0.00011397292837500572, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_domain_adaptation", "lineno": 390, "outcome": "passed", "keywords": ["test_domain_adaptation", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010677287355065346, "outcome": "passed"}, "call": {"duration": 0.04038249794393778, "outcome": "passed"}, "teardown": {"duration": 0.000161672942340374, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestMetaCurriculum::test_meta_update_scheduling", "lineno": 410, "outcome": "passed", "keywords": ["test_meta_update_scheduling", "TestMetaCurriculum", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012590317055583, "outcome": "passed"}, "call": {"duration": 0.005398903973400593, "outcome": "passed"}, "teardown": {"duration": 0.0001235026866197586, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_curriculum_with_real_agent", "lineno": 437, "outcome": "failed", "keywords": ["test_curriculum_with_real_agent", "TestIntegration", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.979214519262314e-05, "outcome": "passed"}, "call": {"duration": 0.0028949612751603127, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/curriculum/test_curriculum.py", "lineno": 483, "message": "TypeError: PPOAgent.update() missing 1 required positional argument: 'done'"}, "longrepr": "E   TypeError: PPOAgent.update() missing 1 required positional argument: 'done'"}, "teardown": {"duration": 0.00013832282274961472, "outcome": "passed"}}, {"nodeid": "tests/algorithms/curriculum/test_curriculum.py::TestIntegration::test_module_orchestration_scenario", "lineno": 493, "outcome": "passed", "keywords": ["test_module_orchestration_scenario", "TestIntegration", "test_curriculum.py", "curriculum", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010516168549656868, "outcome": "passed"}, "call": {"duration": 0.02986021712422371, "outcome": "passed"}, "teardown": {"duration": 0.00014950288459658623, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_module_graph_forward", "lineno": 155, "outcome": "passed", "keywords": ["test_module_graph_forward", "TestGNNIntegration", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00037055835127830505, "outcome": "passed"}, "call": {"duration": 0.017104608938097954, "outcome": "passed"}, "teardown": {"duration": 0.0001301029697060585, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_dynamic_graph", "lineno": 215, "outcome": "passed", "keywords": ["test_dynamic_graph", "TestGNNIntegration", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001033521257340908, "outcome": "passed"}, "call": {"duration": 0.0037519289180636406, "outcome": "passed"}, "teardown": {"duration": 0.00011357199400663376, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestGNNDQNIntegration::test_gnn_dqn_learning", "lineno": 312, "outcome": "failed", "keywords": ["test_gnn_dqn_learning", "TestGNNDQNIntegration", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.966176003217697e-05, "outcome": "passed"}, "call": {"duration": 0.01814309088513255, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/gnn/gnn_integration.py", "lineno": 100, "message": "RuntimeError: Tensors must have same number of dimensions: got 2 and 1"}, "longrepr": "E   RuntimeError: Tensors must have same number of dimensions: got 2 and 1"}, "teardown": {"duration": 0.00018320418894290924, "outcome": "passed"}}, {"nodeid": "tests/algorithms/gnn/test_gnn_integration.py::TestHoneypot::test_static_graph", "lineno": 406, "outcome": "failed", "keywords": ["test_static_graph", "TestHoneypot", "test_gnn_integration.py", "gnn", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012914184480905533, "outcome": "passed"}, "call": {"duration": 0.0015276321209967136, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/gnn/test_gnn_integration.py", "lineno": 429, "message": "AssertionError: Graph features never updated!\nassert not True\n +  where True = <built-in method equal of type object at 0x746c42b7afa0>(tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]), tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))\n +    where <built-in method equal of type object at 0x746c42b7afa0> = torch.equal"}, "longrepr": "E   AssertionError: Graph features never updated!\n    assert not True\n     +  where True = <built-in method equal of type object at 0x746c42b7afa0>(tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]), tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0.,...0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\\n        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))\n     +    where <built-in method equal of type object at 0x746c42b7afa0> = torch.equal"}, "teardown": {"duration": 0.00012975186109542847, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_learn_module_routing", "lineno": 102, "outcome": "passed", "keywords": ["test_learn_module_routing", "TestMaxEntropyIRL", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0006336132064461708, "outcome": "passed"}, "call": {"duration": 1.2552265631966293, "outcome": "passed", "stdout": "Learning reward function from demonstrations...\nIteration 0: Loss = 0.5521\n"}, "teardown": {"duration": 0.0001600128598511219, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_reward_function_properties", "lineno": 160, "outcome": "failed", "keywords": ["test_reward_function_properties", "TestMaxEntropyIRL", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.000137323047965765, "outcome": "passed"}, "call": {"duration": 0.19422842003405094, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/torch/nn/modules/linear.py", "lineno": 125, "message": "RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x7 and 8x128)"}, "stdout": "Iteration 0: Loss = -2.3368\n", "longrepr": "E   RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x7 and 8x128)"}, "teardown": {"duration": 0.0001724441535770893, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_imitate_routing_policy", "lineno": 209, "outcome": "passed", "keywords": ["test_imitate_routing_policy", "TestBehavioralCloning", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00014198292046785355, "outcome": "passed"}, "call": {"duration": 1.947186626959592, "outcome": "passed", "stdout": "Training behavioral cloning...\nTraining on 960 samples, validating on 240 samples\nEpoch 0: Train Loss: 1.1059, Train Acc: 0.3542, Val Loss: 1.0883, Val Acc: 0.3875\nEpoch 20: Train Loss: 1.0300, Train Acc: 0.4708, Val Loss: 1.0905, Val Acc: 0.4000\nEpoch 40: Train Loss: 0.9709, Train Acc: 0.5052, Val Loss: 1.0544, Val Acc: 0.4500\n"}, "teardown": {"duration": 0.00014900276437401772, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_continuous_action_cloning", "lineno": 280, "outcome": "failed", "keywords": ["test_continuous_action_cloning", "TestBehavioralCloning", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010765204206109047, "outcome": "passed"}, "call": {"duration": 0.4314031112007797, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/irl/test_irl.py", "lineno": 318, "message": "AssertionError: Test too fast: 0.4310016632080078s\nassert 0.4310016632080078 > 0.5"}, "stdout": "Training on 240 samples, validating on 60 samples\nEpoch 0: Train Loss: 0.3257, Val Loss: 0.3194\nEpoch 20: Train Loss: 0.0180, Val Loss: 0.0080\n", "longrepr": "E   AssertionError: Test too fast: 0.4310016632080078s\n    assert 0.4310016632080078 > 0.5"}, "teardown": {"duration": 0.00014849333092570305, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestGAIL::test_discriminator_training", "lineno": 327, "outcome": "failed", "keywords": ["test_discriminator_training", "TestGAIL", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010763294994831085, "outcome": "passed"}, "call": {"duration": 0.05373607901856303, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/irl/test_irl.py", "lineno": 395, "message": "AssertionError: Test too fast: 0.05327105522155762s\nassert 0.05327105522155762 > 0.1"}, "longrepr": "E   AssertionError: Test too fast: 0.05327105522155762s\n    assert 0.05327105522155762 > 0.1"}, "teardown": {"duration": 0.00014186277985572815, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_wrong_action_space", "lineno": 404, "outcome": "passed", "keywords": ["test_wrong_action_space", "TestHoneypot", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010611210018396378, "outcome": "passed"}, "call": {"duration": 0.002403391059488058, "outcome": "passed"}, "teardown": {"duration": 0.0001119622029364109, "outcome": "passed"}}, {"nodeid": "tests/algorithms/irl/test_irl.py::TestHoneypot::test_empty_demonstrations", "lineno": 420, "outcome": "passed", "keywords": ["test_empty_demonstrations", "TestHoneypot", "test_irl.py", "irl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00017421366646885872, "outcome": "passed"}, "call": {"duration": 0.00166313536465168, "outcome": "passed", "stdout": "Training on 0 samples, validating on 0 samples\n"}, "teardown": {"duration": 0.00013947300612926483, "outcome": "passed"}}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_agent_communication", "lineno": 366, "outcome": "passed", "keywords": ["test_agent_communication", "TestMultiAgentCoordination", "test_coordination.py", "marl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00032610679045319557, "outcome": "passed"}, "call": {"duration": 0.0038250302895903587, "outcome": "passed"}, "teardown": {"duration": 8.941208943724632e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/marl/test_coordination.py::TestHoneypot::test_fake_multi_agent", "lineno": 493, "outcome": "failed", "keywords": ["test_fake_multi_agent", "TestHoneypot", "test_coordination.py", "marl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.006122127175331e-05, "outcome": "passed"}, "call": {"duration": 0.0011871648021042347, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/marl/test_coordination.py", "lineno": 513, "message": "AssertionError: Agent count mismatch - not truly multi-agent!\nassert 1 == 3\n +  where 1 = len([RLAction(action_type='discrete', action_id=1, parameters={'agent_id': 0})])"}, "longrepr": "E   AssertionError: Agent count mismatch - not truly multi-agent!\n    assert 1 == 3\n     +  where 1 = len([RLAction(action_type='discrete', action_id=1, parameters={'agent_id': 0})])"}, "teardown": {"duration": 9.582191705703735e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_few_shot_adaptation", "lineno": 104, "outcome": "failed", "keywords": ["test_few_shot_adaptation", "TestMAML", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00025702593848109245, "outcome": "passed"}, "call": {"duration": 0.4043685030192137, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 191, "message": "AssertionError: Test too fast: 0.4039599895477295s\nassert 0.4039599895477295 > 1.0"}, "stdout": "Iteration 0: Initial Acc: 0.200, Adapted Acc: 0.627, Improvement: 0.427\nIteration 5: Initial Acc: 0.320, Adapted Acc: 0.947, Improvement: 0.627\nIteration 10: Initial Acc: 0.320, Adapted Acc: 0.933, Improvement: 0.613\nIteration 15: Initial Acc: 0.200, Adapted Acc: 0.733, Improvement: 0.533\n", "longrepr": "E   AssertionError: Test too fast: 0.4039599895477295s\n    assert 0.4039599895477295 > 1.0"}, "teardown": {"duration": 0.00015725381672382355, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAML::test_meta_training", "lineno": 198, "outcome": "failed", "keywords": ["test_meta_training", "TestMAML", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012396275997161865, "outcome": "passed"}, "call": {"duration": 0.0800907020457089, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 273, "message": "AssertionError: Test too fast: 0.07979178428649902s\nassert 0.07979178428649902 > 0.1"}, "longrepr": "E   AssertionError: Test too fast: 0.07979178428649902s\n    assert 0.07979178428649902 > 0.1"}, "teardown": {"duration": 0.00011432310566306114, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestMAMLAgent::test_maml_agent_adaptation", "lineno": 284, "outcome": "failed", "keywords": ["test_maml_agent_adaptation", "TestMAMLAgent", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001017930917441845, "outcome": "passed"}, "call": {"duration": 0.06754119927063584, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 356, "message": "AssertionError: Test too fast: 0.06721830368041992s\nassert 0.06721830368041992 > 0.1"}, "longrepr": "E   AssertionError: Test too fast: 0.06721830368041992s\n    assert 0.06721830368041992 > 0.1"}, "teardown": {"duration": 0.00012964289635419846, "outcome": "passed"}}, {"nodeid": "tests/algorithms/meta/test_maml.py::TestHoneypot::test_no_adaptation", "lineno": 365, "outcome": "failed", "keywords": ["test_no_adaptation", "TestHoneypot", "test_maml.py", "meta", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00013832282274961472, "outcome": "passed"}, "call": {"duration": 0.003801759798079729, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/meta/test_maml.py", "lineno": 403, "message": "AssertionError: Model didn't adapt - learning rates are zero!\nassert False"}, "longrepr": "E   AssertionError: Model didn't adapt - learning rates are zero!\n    assert False"}, "teardown": {"duration": 0.00013230182230472565, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_as_objective", "lineno": 15, "outcome": "passed", "keywords": ["test_entropy_as_objective", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00013589300215244293, "outcome": "passed"}, "call": {"duration": 0.002633695024996996, "outcome": "passed", "stdout": "\u2713 Entropy reward: 0.880\n"}, "teardown": {"duration": 0.00012644287198781967, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_pareto_with_entropy", "lineno": 65, "outcome": "passed", "keywords": ["test_pareto_with_entropy", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011669192463159561, "outcome": "passed"}, "call": {"duration": 0.007823904976248741, "outcome": "passed", "stdout": "\u2713 Pareto front: 7 solutions, entropy range [-0.06, 1.25]\n\u2713 High-entropy solutions: 57.1%\n"}, "teardown": {"duration": 0.00010565202683210373, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_weight_adaptation", "lineno": 126, "outcome": "passed", "keywords": ["test_entropy_weight_adaptation", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011165160685777664, "outcome": "passed"}, "call": {"duration": 0.007494557648897171, "outcome": "passed", "stdout": "\u2713 Entropy weight adapted: 0.100 \u2192 0.125\n", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 21! Entropy dropped from 1.5000 to 0.1000", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749083512.2238185, "msecs": 223.0, "relativeCreated": 8916.044235229492, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.71), increased entropy weight to 0.110", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749083512.2239196, "msecs": 223.0, "relativeCreated": 8916.145324707031, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.77), increased entropy weight to 0.115", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749083512.2248096, "msecs": 224.0, "relativeCreated": 8917.035341262817, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.81), increased entropy weight to 0.120", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749083512.2256634, "msecs": 225.0, "relativeCreated": 8917.88911819458, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.84), increased entropy weight to 0.126", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749083512.226521, "msecs": 226.0, "relativeCreated": 8918.746709823608, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.algorithms.morl.entropy_aware_morl", "msg": "High entropy collapse risk (0.85), increased entropy weight to 0.131", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/morl/entropy_aware_morl.py", "filename": "entropy_aware_morl.py", "module": "entropy_aware_morl", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 258, "funcName": "_adapt_entropy_weight", "created": 1749083512.2273803, "msecs": 227.0, "relativeCreated": 8919.60597038269, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 8.789217099547386e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_preference_balance", "lineno": 181, "outcome": "passed", "keywords": ["test_entropy_preference_balance", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.217206388711929e-05, "outcome": "passed"}, "call": {"duration": 0.0016396348364651203, "outcome": "passed", "stdout": "\u2713 Max obj1: [1. 0.] \u2192 [0.75 0.   0.25]\n\u2713 Max obj2: [0. 1.] \u2192 [0.   0.75 0.25]\n\u2713 Balanced: [0.5 0.5] \u2192 [0.375 0.375 0.25 ]\n"}, "teardown": {"duration": 8.413195610046387e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_metrics_reporting", "lineno": 219, "outcome": "passed", "keywords": ["test_metrics_reporting", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.381212294101715e-05, "outcome": "passed"}, "call": {"duration": 0.004865472204983234, "outcome": "passed", "stdout": "\u2713 current_entropy: 1.4189385175704956\n\u2713 mean_entropy: 1.4189385175704956\n\u2713 min_entropy: 1.4189385175704956\n\u2713 entropy_trend: -9.128605032260189e-17\n\u2713 entropy_collapse_risk: 3.04286834408673e-16\n\u2713 entropy_weight: 0.07737809374999999\n\u2713 avg_entropy_weight: 0.08830270312499999\n"}, "teardown": {"duration": 9.96817834675312e-05, "outcome": "passed"}}, {"nodeid": "tests/algorithms/morl/test_entropy_aware_morl.py::test_fake_ignore_entropy", "lineno": 264, "outcome": "passed", "keywords": ["test_fake_ignore_entropy", "test_entropy_aware_morl.py", "morl", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.135203436017036e-05, "outcome": "passed"}, "call": {"duration": 0.006644478999078274, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.00010815216228365898, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_cartpole_training", "lineno": 17, "outcome": "failed", "keywords": ["test_cartpole_training", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0002908259630203247, "outcome": "passed"}, "call": {"duration": 0.25037385802716017, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/torch/distributions/distribution.py", "lineno": 302, "message": "ValueError: Value is not broadcastable with batch_shape+event_shape: torch.Size([64, 2]) vs torch.Size([64])."}, "longrepr": "E   ValueError: Value is not broadcastable with batch_shape+event_shape: torch.Size([64, 2]) vs torch.Size([64])."}, "teardown": {"duration": 0.00015826430171728134, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_gradient_detachment", "lineno": 124, "outcome": "passed", "keywords": ["test_gradient_detachment", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010221218690276146, "outcome": "passed"}, "call": {"duration": 0.0875256578437984, "outcome": "passed", "stdout": "\u2705 Gradient detachment: Detected 1.56% high-cov tokens\n"}, "teardown": {"duration": 0.00012958282604813576, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_fake_instant_convergence", "lineno": 167, "outcome": "passed", "keywords": ["test_fake_instant_convergence", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.689200669527054e-05, "outcome": "passed"}, "call": {"duration": 0.02530720178037882, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.00014332309365272522, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_asymmetric_clipping", "lineno": 197, "outcome": "passed", "keywords": ["test_asymmetric_clipping", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010887207463383675, "outcome": "passed"}, "call": {"duration": 0.011396239046007395, "outcome": "passed", "stdout": "\u2705 Asymmetric clipping: lower=0.2, upper=0.27999999999999997\n"}, "teardown": {"duration": 0.00013999268412590027, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_adaptive_entropy_coefficient", "lineno": 217, "outcome": "passed", "keywords": ["test_adaptive_entropy_coefficient", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012101186439394951, "outcome": "passed"}, "call": {"duration": 0.011468531098216772, "outcome": "passed"}, "teardown": {"duration": 0.00011644279584288597, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_entropy_aware_ppo.py::test_entropy_preservation", "lineno": 253, "outcome": "passed", "keywords": ["test_entropy_preservation", "test_entropy_aware_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011457223445177078, "outcome": "passed"}, "call": {"duration": 0.7285252511501312, "outcome": "passed", "stdout": "\nEntropy preservation test:\nStandard PPO - Current entropy: N/A\nEntropy PPO - Current entropy: 2.8187391996383666\n"}, "teardown": {"duration": 0.00011545233428478241, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_penalty", "lineno": 17, "outcome": "passed", "keywords": ["test_kl_penalty", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00010207202285528183, "outcome": "passed"}, "call": {"duration": 0.08570668986067176, "outcome": "passed", "stdout": "DEBUG: KL penalties observed: 2\nDEBUG: KL values: [0.000554779137019068, 0.00035516530624590814]\nDEBUG: KL variance: 9.961420358983926e-09\n\u2705 KL penalty test passed: avg_kl=0.0005, variance=0.0000, high_cov_ratio=6.250%\n"}, "teardown": {"duration": 0.00011154171079397202, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_entropy_preservation", "lineno": 89, "outcome": "passed", "keywords": ["test_entropy_preservation", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.138090535998344e-05, "outcome": "passed"}, "call": {"duration": 0.5042647607624531, "outcome": "passed", "stdout": "\u2705 Entropy preservation: Initial=2.836, Final=2.833, Min=2.831, Drop=0.1%\n"}, "teardown": {"duration": 0.00012925313785672188, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_fake_zero_kl", "lineno": 145, "outcome": "failed", "keywords": ["test_fake_zero_kl", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.784195572137833e-05, "outcome": "passed"}, "call": {"duration": 0.033774829003959894, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/algorithms/ppo/test_kl_cov_ppo.py", "lineno": 181, "message": "AssertionError: HONEYPOT FAILED: No training occurred with constant inputs\nassert False"}, "longrepr": "E   AssertionError: HONEYPOT FAILED: No training occurred with constant inputs\n    assert False"}, "teardown": {"duration": 0.00013701291754841805, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_kl_scaling_by_covariance", "lineno": 186, "outcome": "passed", "keywords": ["test_kl_scaling_by_covariance", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.777210652828217e-05, "outcome": "passed"}, "call": {"duration": 0.0392097239382565, "outcome": "passed", "stdout": "\u2705 KL scaling test passed: High-cov ratio verified\n"}, "teardown": {"duration": 0.00014490261673927307, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_dynamic_kl_adaptation", "lineno": 240, "outcome": "passed", "keywords": ["test_dynamic_kl_adaptation", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00011833198368549347, "outcome": "passed"}, "call": {"duration": 0.14976982586085796, "outcome": "passed", "stdout": "\u2705 Dynamic KL adaptation: Initial=0.100, Final=0.067, Range=[0.067, 0.100]\n"}, "teardown": {"duration": 0.00012842286378145218, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_kl_cov_ppo.py::test_comparison_with_clip_cov", "lineno": 291, "outcome": "passed", "keywords": ["test_comparison_with_clip_cov", "test_kl_cov_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 9.745173156261444e-05, "outcome": "passed"}, "call": {"duration": 0.27020202623680234, "outcome": "passed", "stdout": "\u2705 Comparison test passed:\n   Clip-Cov: Reward=-487.1, Entropy=2.836\n   KL-Cov:   Reward=-500.3, Entropy=2.836\n"}, "teardown": {"duration": 0.00012182304635643959, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_continuous", "lineno": 10, "outcome": "passed", "keywords": ["test_ppo_continuous", "test_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.0001027621328830719, "outcome": "passed"}, "call": {"duration": 0.08971703425049782, "outcome": "passed", "stdout": "Testing PPO with continuous actions...\nEpisode 0, Step 0: Action = [-0.3336397409439087, -0.0874946191906929]\nEpisode 0, Step 1: Action = [1.0, 0.006878761574625969]\nEpisode 0, Step 2: Action = [1.0, 1.0]\nEpisode 0, Step 3: Action = [1.0, 1.0]\nEpisode 0, Step 4: Action = [-0.8327511548995972, 0.012442006729543209]\nEpisode 0, Step 5: Action = [-1.0, 0.05828958749771118]\nEpisode 0, Step 6: Action = [1.0, -0.9370137453079224]\nEpisode 0, Step 7: Action = [0.09149106591939926, -0.18391099572181702]\nEpisode 0, Step 8: Action = [-0.409434050321579, 0.039823029190301895]\nEpisode 0, Step 9: Action = [0.5386835932731628, -0.27701854705810547]\nEpisode 0, Step 10: Action = [-0.8601548671722412, -0.6661117672920227]\nEpisode 0, Step 11: Action = [0.2846219837665558, 1.0]\nEpisode 0, Step 12: Action = [0.4378986060619354, 1.0]\nEpisode 0, Step 13: Action = [1.0, 0.33793362975120544]\nEpisode 0, Step 14: Action = [0.38179051876068115, -0.2388659119606018]\nEpisode 0, Step 15: Action = [0.3323654532432556, 0.797827959060669]\nEpisode 0, Step 16: Action = [-0.9152365326881409, 0.35354718565940857]\nEpisode 0, Step 17: Action = [-1.0, 0.7149047255516052]\nEpisode 0, Step 18: Action = [-1.0, 0.5163212418556213]\nEpisode 0, Step 19: Action = [0.32696905732154846, 0.3705254793167114]\nEpisode 0 total reward: 4.36421661933809\nEpisode 1, Step 0: Action = [0.6370593905448914, -0.6430744528770447]\nEpisode 1, Step 1: Action = [0.8403164744377136, -0.32021674513816833]\nEpisode 1, Step 2: Action = [-0.9293521046638489, -0.40183526277542114]\nEpisode 1, Step 3: Action = [0.6420071125030518, -0.9596951603889465]\nEpisode 1, Step 4: Action = [0.08818213641643524, 0.4634445011615753]\nEpisode 1, Step 5: Action = [-1.0, -0.6653879880905151]\nEpisode 1, Step 6: Action = [-0.00027028657495975494, -1.0]\nEpisode 1, Step 7: Action = [1.0, 1.0]\nEpisode 1, Step 8: Action = [-1.0, 0.835557758808136]\nEpisode 1, Step 9: Action = [0.8361194133758545, -1.0]\nEpisode 1, Step 10: Action = [0.5568310618400574, -0.5850338935852051]\nEpisode 1, Step 11: Action = [-0.25299638509750366, 1.0]\nEpisode 1, Step 12: Action = [-0.3704591691493988, -0.8097035884857178]\nEpisode 1, Step 13: Action = [-0.4656660258769989, -0.9279181361198425]\nEpisode 1, Step 14: Action = [1.0, 0.7084017992019653]\nEpisode 1, Step 15: Action = [-0.675096869468689, -1.0]\nEpisode 1, Step 16: Action = [0.7344383597373962, -0.6205167770385742]\nEpisode 1, Step 17: Action = [-0.7352692484855652, 1.0]\nEpisode 1, Step 18: Action = [0.1601131111383438, 0.4271283745765686]\nEpisode 1, Step 19: Action = [-0.07346518337726593, -1.0]\nTraining losses: {'actor_loss': -0.03712004646658897, 'critic_loss': 8.194175529479981, 'entropy': 2.8378038883209227, 'total_loss': 4.031589651107788, 'training_steps': 38}\nEpisode 1 total reward: 3.3745352786751255\nEpisode 2, Step 0: Action = [0.2811375856399536, 0.03130844980478287]\nEpisode 2, Step 1: Action = [0.48380008339881897, 0.6107242107391357]\nEpisode 2, Step 2: Action = [0.7194830775260925, 0.8749716877937317]\nEpisode 2, Step 3: Action = [-1.0, -0.8823771476745605]\nEpisode 2, Step 4: Action = [0.5523062944412231, 0.05292673408985138]\nEpisode 2, Step 5: Action = [0.9483338594436646, -0.1533057689666748]\nEpisode 2, Step 6: Action = [0.16738562285900116, -0.290727823972702]\nEpisode 2, Step 7: Action = [-1.0, -0.5330398678779602]\nEpisode 2, Step 8: Action = [-0.011327274143695831, 0.49781444668769836]\nEpisode 2, Step 9: Action = [0.7787989377975464, 0.7172872424125671]\nEpisode 2, Step 10: Action = [-1.0, 0.6679111123085022]\nEpisode 2, Step 11: Action = [-0.35862401127815247, -0.11690583825111389]\nEpisode 2, Step 12: Action = [0.16180221736431122, 0.809613823890686]\nEpisode 2, Step 13: Action = [1.0, -0.01939573884010315]\nEpisode 2, Step 14: Action = [0.005218818783760071, 0.8117822408676147]\nEpisode 2, Step 15: Action = [1.0, 1.0]\nEpisode 2, Step 16: Action = [0.7719388008117676, 0.24275892972946167]\nEpisode 2, Step 17: Action = [-1.0, 1.0]\nEpisode 2, Step 18: Action = [1.0, 1.0]\nEpisode 2, Step 19: Action = [0.2863176465034485, 0.6118166446685791]\nEpisode 2 total reward: -0.1500170139479099\nEpisode 3, Step 0: Action = [-0.37522417306900024, -0.4330589771270752]\nEpisode 3, Step 1: Action = [0.1068764477968216, 0.6309658288955688]\nEpisode 3, Step 2: Action = [-1.0, -1.0]\nEpisode 3, Step 3: Action = [-1.0, 1.0]\nEpisode 3, Step 4: Action = [-0.1728840172290802, -1.0]\nEpisode 3, Step 5: Action = [0.07800868153572083, 0.23789718747138977]\nEpisode 3, Step 6: Action = [-0.17666980624198914, 0.37830471992492676]\nEpisode 3, Step 7: Action = [0.8987725973129272, -1.0]\nEpisode 3, Step 8: Action = [-1.0, 0.8487996459007263]\nEpisode 3, Step 9: Action = [0.7437717318534851, -0.8842943906784058]\nEpisode 3, Step 10: Action = [0.44066837430000305, 0.2436896413564682]\nEpisode 3, Step 11: Action = [-0.15208424627780914, 0.9725298285484314]\nEpisode 3, Step 12: Action = [-0.28980928659439087, -0.8255859613418579]\nEpisode 3, Step 13: Action = [0.3608270287513733, -1.0]\nEpisode 3, Step 14: Action = [0.3321819305419922, 0.6925209760665894]\nEpisode 3, Step 15: Action = [-0.19419923424720764, -1.0]\nEpisode 3, Step 16: Action = [-0.1748770773410797, 1.0]\nEpisode 3, Step 17: Action = [-0.3892100751399994, -1.0]\nEpisode 3, Step 18: Action = [-1.0, -0.225873202085495]\nEpisode 3, Step 19: Action = [-1.0, 1.0]\nTraining losses: {'actor_loss': -0.01787051483988762, 'critic_loss': 2.3785813331604, 'entropy': 2.8372073650360106, 'total_loss': 1.143048107624054, 'training_steps': 76}\nEpisode 3 total reward: 5.422036637616239\nEpisode 4, Step 0: Action = [0.2572721242904663, -0.217362642288208]\nEpisode 4, Step 1: Action = [0.14203327894210815, -0.8570239543914795]\nEpisode 4, Step 2: Action = [0.9248689413070679, -0.7687667608261108]\nEpisode 4, Step 3: Action = [0.907383918762207, 1.0]\nEpisode 4, Step 4: Action = [-0.46661150455474854, 0.10651472210884094]\nEpisode 4, Step 5: Action = [1.0, -0.2563514709472656]\nEpisode 4, Step 6: Action = [-0.4183831810951233, 0.10493877530097961]\nEpisode 4, Step 7: Action = [-1.0, -0.2442123293876648]\nEpisode 4, Step 8: Action = [-0.514018177986145, 1.0]\nEpisode 4, Step 9: Action = [0.6614809632301331, 0.6097031831741333]\nEpisode 4, Step 10: Action = [1.0, 1.0]\nEpisode 4, Step 11: Action = [-0.3858335614204407, -0.3931962251663208]\nEpisode 4, Step 12: Action = [0.030225522816181183, -0.4446221590042114]\nEpisode 4, Step 13: Action = [1.0, 1.0]\nEpisode 4, Step 14: Action = [1.0, 0.3263419568538666]\nEpisode 4, Step 15: Action = [0.7142282128334045, 0.057615190744400024]\nEpisode 4, Step 16: Action = [-0.018563270568847656, -0.44367891550064087]\nEpisode 4, Step 17: Action = [1.0, 1.0]\nEpisode 4, Step 18: Action = [-0.3331829309463501, 0.32410383224487305]\nEpisode 4, Step 19: Action = [-0.9516433477401733, 0.9386608600616455]\nEpisode 4 total reward: 2.6021749382557737\n\nFinal metrics: {'training_steps': 76, 'episodes': 5, 'training': True, 'avg_episode_rewards': np.float64(3.1225892919874636), 'recent_episode_rewards': [4.36421661933809, 3.3745352786751255, -0.1500170139479099, 5.422036637616239, 2.6021749382557737], 'avg_episode_lengths': np.float64(20.0), 'recent_episode_lengths': [20, 20, 20, 20, 20], 'avg_actor_losses': np.float64(-0.027495280653238294), 'recent_actor_losses': [-0.03712004646658897, -0.01787051483988762], 'avg_critic_losses': np.float64(5.286378431320191), 'recent_critic_losses': [8.194175529479981, 2.3785813331604], 'avg_entropy_losses': np.float64(2.8375056266784666), 'recent_entropy_losses': [2.8378038883209227, 2.8372073650360106], 'avg_total_losses': np.float64(2.587318879365921), 'recent_total_losses': [4.031589651107788, 1.143048107624054]}\nSave/load test passed!\n\nPPO continuous test completed successfully!\n"}, "teardown": {"duration": 0.00014728307723999023, "outcome": "passed"}}, {"nodeid": "tests/algorithms/ppo/test_ppo.py::test_ppo_discrete", "lineno": 70, "outcome": "passed", "keywords": ["test_ppo_discrete", "test_ppo.py", "ppo", "algorithms", "tests", "rl_commons", ""], "setup": {"duration": 0.00012070173397660255, "outcome": "passed"}, "call": {"duration": 0.011016140691936016, "outcome": "passed", "stdout": "\nTesting PPO with discrete actions...\nStep 0: Action ID = 0\nStep 1: Action ID = 1\nStep 2: Action ID = 2\nStep 3: Action ID = 2\nStep 4: Action ID = 3\nStep 5: Action ID = 0\nStep 6: Action ID = 2\nStep 7: Action ID = 3\nStep 8: Action ID = 0\nStep 9: Action ID = 2\nPPO discrete test completed successfully!\n"}, "teardown": {"duration": 9.337207302451134e-05, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_result_creation", "lineno": 35, "outcome": "passed", "keywords": ["test_benchmark_result_creation", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0002686362713575363, "outcome": "passed"}, "call": {"duration": 0.00013305339962244034, "outcome": "passed"}, "teardown": {"duration": 8.157175034284592e-05, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_creation", "lineno": 55, "outcome": "passed", "keywords": ["test_benchmark_suite_creation", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0010049305856227875, "outcome": "passed"}, "call": {"duration": 0.00013104313984513283, "outcome": "passed"}, "teardown": {"duration": 0.00017485395073890686, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_custom_benchmark", "lineno": 62, "outcome": "passed", "keywords": ["test_custom_benchmark", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0004089684225618839, "outcome": "passed"}, "call": {"duration": 0.0007389849051833153, "outcome": "passed"}, "teardown": {"duration": 0.0001673828810453415, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_suite_execution", "lineno": 86, "outcome": "passed", "keywords": ["test_benchmark_suite_execution", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00041686883196234703, "outcome": "passed"}, "call": {"duration": 0.03141066990792751, "outcome": "passed"}, "teardown": {"duration": 0.00026051560416817665, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_benchmark_comparison", "lineno": 116, "outcome": "passed", "keywords": ["test_benchmark_comparison", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0004406501539051533, "outcome": "passed"}, "call": {"duration": 0.00013662315905094147, "outcome": "passed"}, "teardown": {"duration": 0.00016239425167441368, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestBenchmarkSuite::test_report_generation", "lineno": 149, "outcome": "passed", "keywords": ["test_report_generation", "TestBenchmarkSuite", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00041552912443876266, "outcome": "passed"}, "call": {"duration": 0.00026415614411234856, "outcome": "passed"}, "teardown": {"duration": 0.00018814392387866974, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_algorithm_benchmark_setup", "lineno": 181, "outcome": "passed", "keywords": ["test_algorithm_benchmark_setup", "TestAlgorithmBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 8.931197226047516e-05, "outcome": "passed"}, "call": {"duration": 0.008660002145916224, "outcome": "passed"}, "teardown": {"duration": 9.70819965004921e-05, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_multi_objective_benchmark", "lineno": 201, "outcome": "failed", "keywords": ["test_multi_objective_benchmark", "TestAlgorithmBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 9.84417274594307e-05, "outcome": "passed"}, "call": {"duration": 3.5385635001584888, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 212, "message": "assert 'pareto_solutions' in {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"}\n +  where {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"} = BenchmarkResult(benchmark_name='morl_2obj', algorithm='MultiObjectiveBenchmark', metrics={'error': \"'ParetoFront' obje...mp=datetime.datetime(2025, 6, 4, 20, 31, 58, 137955), metadata={'description': 'Multi-objective RL with 2 objectives'}).metrics"}, "log": [{"name": "rl_commons.benchmarks.benchmark_suite", "msg": "Benchmark morl_2obj failed: 'ParetoFront' object has no attribute 'calculate_hypervolume'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/benchmark_suite.py", "filename": "benchmark_suite.py", "module": "benchmark_suite", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 95, "funcName": "execute", "created": 1749083518.136801, "msecs": 136.0, "relativeCreated": 14829.026699066162, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}], "longrepr": "E   assert 'pareto_solutions' in {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"}\n     +  where {'error': \"'ParetoFront' object has no attribute 'calculate_hypervolume'\"} = BenchmarkResult(benchmark_name='morl_2obj', algorithm='MultiObjectiveBenchmark', metrics={'error': \"'ParetoFront' obje...mp=datetime.datetime(2025, 6, 4, 20, 31, 58, 137955), metadata={'description': 'Multi-objective RL with 2 objectives'}).metrics"}, "teardown": {"duration": 0.0001649833284318447, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestAlgorithmBenchmarks::test_scalability_benchmark", "lineno": 215, "outcome": "failed", "keywords": ["test_scalability_benchmark", "TestAlgorithmBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00012611178681254387, "outcome": "passed"}, "call": {"duration": 0.0005168011412024498, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 227, "message": "assert 'state_scaling_factor' in {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"}\n +  where {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"} = BenchmarkResult(benchmark_name='scalability_ppo', algorithm='ScalabilityBenchmark', metrics={'error': \"PPOAgent.__init...0.0, timestamp=datetime.datetime(2025, 6, 4, 20, 31, 58, 140081), metadata={'description': 'Scalability test for ppo'}).metrics"}, "log": [{"name": "rl_commons.benchmarks.benchmark_suite", "msg": "Benchmark scalability_ppo failed: PPOAgent.__init__() missing 1 required positional argument: 'name'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/benchmark_suite.py", "filename": "benchmark_suite.py", "module": "benchmark_suite", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 95, "funcName": "execute", "created": 1749083518.1399672, "msecs": 139.0, "relativeCreated": 14832.19289779663, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}], "longrepr": "E   assert 'state_scaling_factor' in {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"}\n     +  where {'error': \"PPOAgent.__init__() missing 1 required positional argument: 'name'\"} = BenchmarkResult(benchmark_name='scalability_ppo', algorithm='ScalabilityBenchmark', metrics={'error': \"PPOAgent.__init...0.0, timestamp=datetime.datetime(2025, 6, 4, 20, 31, 58, 140081), metadata={'description': 'Scalability test for ppo'}).metrics"}, "teardown": {"duration": 0.00012391293421387672, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestIntegrationBenchmarks::test_module_orchestration_benchmark", "lineno": 235, "outcome": "failed", "keywords": ["test_module_orchestration_benchmark", "TestIntegrationBenchmarks", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.00011838320642709732, "outcome": "passed"}, "call": {"duration": 0.0017479672096669674, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/benchmarks/test_benchmarks.py", "lineno": 247, "message": "assert 'routing_success_rate' in {'error': \"RLReward.__init__() got an unexpected keyword argument 'context'\"}\n +  where {'error': \"RLReward.__init__() got an unexpected keyword argument 'context'\"} = BenchmarkResult(benchmark_name='integration_module_orchestration', algorithm='ModuleOrchestrationBenchmark', metrics={...amp=datetime.datetime(2025, 6, 4, 20, 31, 58, 142870), metadata={'description': 'Module orchestration with 3 modules'}).metrics"}, "log": [{"name": "rl_commons.benchmarks.benchmark_suite", "msg": "Benchmark integration_module_orchestration failed: RLReward.__init__() got an unexpected keyword argument 'context'", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/benchmark_suite.py", "filename": "benchmark_suite.py", "module": "benchmark_suite", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 95, "funcName": "execute", "created": 1749083518.1427372, "msecs": 142.0, "relativeCreated": 14834.962844848633, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}], "longrepr": "E   assert 'routing_success_rate' in {'error': \"RLReward.__init__() got an unexpected keyword argument 'context'\"}\n     +  where {'error': \"RLReward.__init__() got an unexpected keyword argument 'context'\"} = BenchmarkResult(benchmark_name='integration_module_orchestration', algorithm='ModuleOrchestrationBenchmark', metrics={...amp=datetime.datetime(2025, 6, 4, 20, 31, 58, 142870), metadata={'description': 'Module orchestration with 3 modules'}).metrics"}, "teardown": {"duration": 0.00011142203584313393, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_basic_profiling", "lineno": 260, "outcome": "passed", "keywords": ["test_basic_profiling", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0006658830679953098, "outcome": "passed"}, "call": {"duration": 0.0007850262336432934, "outcome": "passed"}, "teardown": {"duration": 0.00029211584478616714, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_nested_profiling", "lineno": 278, "outcome": "failed", "keywords": ["test_nested_profiling", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0011244742199778557, "outcome": "passed"}, "call": {"duration": 0.01078766630962491, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/benchmarks/performance_profiler.py", "lineno": 95, "message": "ValueError: Another profiling tool is already active"}, "longrepr": "E   ValueError: Another profiling tool is already active"}, "teardown": {"duration": 0.0002457047812640667, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_bottleneck_analysis", "lineno": 295, "outcome": "passed", "keywords": ["test_bottleneck_analysis", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.0010726829059422016, "outcome": "passed"}, "call": {"duration": 0.3683088649995625, "outcome": "passed"}, "teardown": {"duration": 0.0005911923944950104, "outcome": "passed"}}, {"nodeid": "tests/benchmarks/test_benchmarks.py::TestPerformanceProfiler::test_report_generation", "lineno": 321, "outcome": "passed", "keywords": ["test_report_generation", "TestPerformanceProfiler", "test_benchmarks.py", "benchmarks", "tests", "rl_commons", ""], "setup": {"duration": 0.001865318976342678, "outcome": "passed"}, "call": {"duration": 0.002657705917954445, "outcome": "passed"}, "teardown": {"duration": 0.0003644968383014202, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_creation", "lineno": 35, "outcome": "passed", "keywords": ["test_task_properties_creation", "TestTaskProperties", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0011824453249573708, "outcome": "passed"}, "call": {"duration": 0.00036182813346385956, "outcome": "passed"}, "teardown": {"duration": 0.00023763393983244896, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_task_properties_serialization", "lineno": 50, "outcome": "passed", "keywords": ["test_task_properties_serialization", "TestTaskProperties", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00027151498943567276, "outcome": "passed"}, "call": {"duration": 0.0004685991443693638, "outcome": "passed"}, "teardown": {"duration": 0.0001887739636003971, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestTaskProperties::test_module_context", "lineno": 74, "outcome": "passed", "keywords": ["test_module_context", "TestTaskProperties", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002108248881995678, "outcome": "passed"}, "call": {"duration": 0.00022666528820991516, "outcome": "passed"}, "teardown": {"duration": 0.00019334396347403526, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_update", "lineno": 90, "outcome": "passed", "keywords": ["test_performance_update", "TestAlgorithmPerformance", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00027102604508399963, "outcome": "passed"}, "call": {"duration": 0.0003461274318397045, "outcome": "passed"}, "teardown": {"duration": 0.00023894524201750755, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmPerformance::test_performance_score", "lineno": 129, "outcome": "passed", "keywords": ["test_performance_score", "TestAlgorithmPerformance", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00026528583839535713, "outcome": "passed"}, "call": {"duration": 0.0004215589724481106, "outcome": "passed"}, "teardown": {"duration": 0.00024817464873194695, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_selector_initialization", "lineno": 168, "outcome": "passed", "keywords": ["test_selector_initialization", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0005409820005297661, "outcome": "passed"}, "call": {"duration": 0.0002763662487268448, "outcome": "passed"}, "teardown": {"duration": 0.00023924512788653374, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_registration", "lineno": 175, "outcome": "passed", "keywords": ["test_algorithm_registration", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00043233903124928474, "outcome": "passed"}, "call": {"duration": 0.0004476499743759632, "outcome": "passed"}, "teardown": {"duration": 0.00027039600536227226, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_task_property_extraction", "lineno": 208, "outcome": "passed", "keywords": ["test_task_property_extraction", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0004937709309160709, "outcome": "passed"}, "call": {"duration": 0.0007768962532281876, "outcome": "passed"}, "teardown": {"duration": 0.00022495491430163383, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_discrete", "lineno": 224, "outcome": "passed", "keywords": ["test_algorithm_selection_discrete", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0003325468860566616, "outcome": "passed"}, "call": {"duration": 0.0036412663757801056, "outcome": "passed"}, "teardown": {"duration": 0.0002193036489188671, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_selection_continuous", "lineno": 241, "outcome": "passed", "keywords": ["test_algorithm_selection_continuous", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00032916711643338203, "outcome": "passed"}, "call": {"duration": 0.01186683913692832, "outcome": "passed"}, "teardown": {"duration": 0.00030983565375208855, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_force_algorithm_selection", "lineno": 258, "outcome": "passed", "keywords": ["test_force_algorithm_selection", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0004606400616466999, "outcome": "passed"}, "call": {"duration": 0.014409642666578293, "outcome": "passed"}, "teardown": {"duration": 0.00028093624860048294, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_recommendations", "lineno": 269, "outcome": "passed", "keywords": ["test_algorithm_recommendations", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00042525865137577057, "outcome": "passed"}, "call": {"duration": 0.0006209928542375565, "outcome": "passed"}, "teardown": {"duration": 0.00024518510326743126, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_performance_tracking", "lineno": 291, "outcome": "passed", "keywords": ["test_performance_tracking", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00038078799843788147, "outcome": "passed"}, "call": {"duration": 0.003590684849768877, "outcome": "passed"}, "teardown": {"duration": 0.00019520428031682968, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_algorithm_switching", "lineno": 322, "outcome": "passed", "keywords": ["test_algorithm_switching", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00031996704638004303, "outcome": "passed"}, "call": {"duration": 0.0036610569804906845, "outcome": "passed", "log": [{"name": "rl_commons.core.algorithm_selector", "msg": "Performance declining for DQN_1749083518: 100.00 -> 20.00", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/algorithm_selector.py", "filename": "algorithm_selector.py", "module": "algorithm_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 599, "funcName": "should_switch_algorithm", "created": 1749083518.6036696, "msecs": 603.0, "relativeCreated": 15295.895338058472, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 0.00020068511366844177, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_save_load_performance_history", "lineno": 346, "outcome": "passed", "keywords": ["test_save_load_performance_history", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0003276970237493515, "outcome": "passed"}, "call": {"duration": 0.0046412269584834576, "outcome": "passed"}, "teardown": {"duration": 0.00021211523562669754, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestAlgorithmSelector::test_statistics", "lineno": 383, "outcome": "failed", "keywords": ["test_statistics", "TestAlgorithmSelector", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00033892784267663956, "outcome": "passed"}, "call": {"duration": 0.007903835736215115, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/core/test_algorithm_selector.py", "lineno": 408, "message": "assert 1 == 2"}, "longrepr": "E   assert 1 == 2"}, "teardown": {"duration": 0.00048445072025060654, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_create_module_context", "lineno": 413, "outcome": "passed", "keywords": ["test_create_module_context", "TestModuleCommunicationIntegration", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00031209690496325493, "outcome": "passed"}, "call": {"duration": 0.00036955811083316803, "outcome": "passed"}, "teardown": {"duration": 0.00020554428920149803, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_extract_module_characteristics", "lineno": 425, "outcome": "passed", "keywords": ["test_extract_module_characteristics", "TestModuleCommunicationIntegration", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00021040486171841621, "outcome": "passed"}, "call": {"duration": 0.0013251579366624355, "outcome": "passed"}, "teardown": {"duration": 0.0001779543235898018, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestModuleCommunicationIntegration::test_module_aware_selection", "lineno": 449, "outcome": "passed", "keywords": ["test_module_aware_selection", "TestModuleCommunicationIntegration", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00019337423145771027, "outcome": "passed"}, "call": {"duration": 0.0002977261319756508, "outcome": "passed"}, "teardown": {"duration": 0.00017659412696957588, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_empty_algorithm_registry", "lineno": 481, "outcome": "passed", "keywords": ["test_empty_algorithm_registry", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0001903139054775238, "outcome": "passed"}, "call": {"duration": 0.0003855479881167412, "outcome": "passed"}, "teardown": {"duration": 0.00016724318265914917, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_invalid_force_algorithm", "lineno": 492, "outcome": "passed", "keywords": ["test_invalid_force_algorithm", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0001876535825431347, "outcome": "passed"}, "call": {"duration": 0.010608313139528036, "outcome": "passed"}, "teardown": {"duration": 0.0002787448465824127, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_performance_with_zero_episodes", "lineno": 501, "outcome": "failed", "keywords": ["test_performance_with_zero_episodes", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00021470384672284126, "outcome": "passed"}, "call": {"duration": 0.0006074621342122555, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/core/test_algorithm_selector.py", "lineno": 510, "message": "assert 0.1 == 0.0"}, "longrepr": "E   assert 0.1 == 0.0"}, "teardown": {"duration": 0.00019151391461491585, "outcome": "passed"}}, {"nodeid": "tests/core/test_algorithm_selector.py::TestEdgeCases::test_task_hash_consistency", "lineno": 511, "outcome": "passed", "keywords": ["test_task_hash_consistency", "TestEdgeCases", "test_algorithm_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0001962636597454548, "outcome": "passed"}, "call": {"duration": 0.0003824979066848755, "outcome": "passed"}, "teardown": {"duration": 0.00018145283684134483, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_rl_state_creation", "lineno": 7, "outcome": "passed", "keywords": ["test_rl_state_creation", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0003321971744298935, "outcome": "passed"}, "call": {"duration": 0.00031851697713136673, "outcome": "passed"}, "teardown": {"duration": 0.00018989434465765953, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_rl_action_creation", "lineno": 23, "outcome": "passed", "keywords": ["test_rl_action_creation", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002900962717831135, "outcome": "passed"}, "call": {"duration": 0.00021857395768165588, "outcome": "passed"}, "teardown": {"duration": 0.00019452394917607307, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_rl_reward_creation", "lineno": 36, "outcome": "passed", "keywords": ["test_rl_reward_creation", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002798852510750294, "outcome": "passed"}, "call": {"duration": 0.00022964505478739738, "outcome": "passed"}, "teardown": {"duration": 0.00018645264208316803, "outcome": "passed"}}, {"nodeid": "tests/core/test_base.py::test_replay_buffer", "lineno": 49, "outcome": "passed", "keywords": ["test_replay_buffer", "test_base.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0001939842477440834, "outcome": "passed"}, "call": {"duration": 0.0008082869462668896, "outcome": "passed"}, "teardown": {"duration": 0.00024762609973549843, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_covariance_calculation", "lineno": 11, "outcome": "passed", "keywords": ["test_covariance_calculation", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.000306176021695137, "outcome": "passed"}, "call": {"duration": 0.0015621529892086983, "outcome": "passed", "stdout": "\u2705 Covariance calculation: Mean=0.1667, Std=0.1490\n"}, "teardown": {"duration": 0.0002772756852209568, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_percentile_threshold", "lineno": 42, "outcome": "passed", "keywords": ["test_percentile_threshold", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00028182612732052803, "outcome": "passed"}, "call": {"duration": 0.02458351617679, "outcome": "passed", "stdout": "\u2705 Percentile threshold: Found 0.130% outliers (expected ~0.2%)\n"}, "teardown": {"duration": 0.00028128596022725105, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_fake_all_high_cov", "lineno": 86, "outcome": "passed", "keywords": ["test_fake_all_high_cov", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002033938653767109, "outcome": "passed"}, "call": {"duration": 0.0016636652871966362, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.0001807529479265213, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_torch_tensor_support", "lineno": 105, "outcome": "passed", "keywords": ["test_torch_tensor_support", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0001944839023053646, "outcome": "passed"}, "call": {"duration": 0.0007959762588143349, "outcome": "passed"}, "teardown": {"duration": 0.0002462654374539852, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_adaptive_threshold", "lineno": 121, "outcome": "passed", "keywords": ["test_adaptive_threshold", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00021002395078539848, "outcome": "passed"}, "call": {"duration": 0.0002672448754310608, "outcome": "passed"}, "teardown": {"duration": 0.00017074309289455414, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_distribution_analysis", "lineno": 139, "outcome": "passed", "keywords": ["test_distribution_analysis", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00019775377586483955, "outcome": "passed"}, "call": {"duration": 0.0024829022586345673, "outcome": "passed"}, "teardown": {"duration": 0.00026806583628058434, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_history_tracking", "lineno": 165, "outcome": "passed", "keywords": ["test_history_tracking", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0006860652938485146, "outcome": "passed"}, "call": {"duration": 0.0015126923099160194, "outcome": "passed"}, "teardown": {"duration": 0.00027253618463873863, "outcome": "passed"}}, {"nodeid": "tests/core/test_covariance_analyzer.py::test_real_rl_scenario", "lineno": 185, "outcome": "failed", "keywords": ["test_real_rl_scenario", "test_covariance_analyzer.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0003682980313897133, "outcome": "passed"}, "call": {"duration": 0.0814774208702147, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/core/test_covariance_analyzer.py", "lineno": 231, "message": "AssertionError: No variation in outlier ratios\nassert np.float64(0.0) > 0"}, "longrepr": "E   AssertionError: No variation in outlier ratios\n    assert np.float64(0.0) > 0"}, "teardown": {"duration": 0.00025595491752028465, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_aware_selection", "lineno": 16, "outcome": "passed", "keywords": ["test_entropy_aware_selection", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00021074526011943817, "outcome": "passed"}, "call": {"duration": 0.06850489927455783, "outcome": "passed", "stdout": "\u2713 Normal selection: PPOAgent\n\u2713 Low entropy selection: KLCovPPO\n\u2713 Critical entropy selection: EntropyAwarePPO\n", "log": [{"name": "rl_commons.core.entropy_aware_selector", "msg": "Entropy intervention needed: entropy=0.300, risk=0.80", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 236, "funcName": "select_algorithm", "created": 1749083518.805614, "msecs": 805.0, "relativeCreated": 15497.83968925476, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.core.entropy_aware_selector", "msg": "Entropy intervention needed: entropy=0.200, risk=0.90", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 236, "funcName": "select_algorithm", "created": 1749083518.8389494, "msecs": 838.0, "relativeCreated": 15531.175136566162, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 0.000268035102635622, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_health_tracking", "lineno": 85, "outcome": "passed", "keywords": ["test_entropy_health_tracking", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002592857927083969, "outcome": "passed"}, "call": {"duration": 0.011976890731602907, "outcome": "passed", "stdout": "\u2713 Entropy health tracking verified\n"}, "teardown": {"duration": 0.00024382490664720535, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_algorithm_switching", "lineno": 127, "outcome": "passed", "keywords": ["test_algorithm_switching", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00023062480613589287, "outcome": "passed"}, "call": {"duration": 0.016689331270754337, "outcome": "passed", "stdout": "\u2713 Algorithm switching logic verified\n", "log": [{"name": "rl_commons.core.entropy_aware_selector", "msg": "Switching from PPOAgent due to entropy collapse risk: 0.87", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 388, "funcName": "should_switch_algorithm", "created": 1749083518.8874798, "msecs": 887.0, "relativeCreated": 15579.705476760864, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}, {"name": "rl_commons.core.entropy_aware_selector", "msg": "Switching from PPOAgent due to entropy collapse risk: 0.87", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/entropy_aware_selector.py", "filename": "entropy_aware_selector.py", "module": "entropy_aware_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 388, "funcName": "should_switch_algorithm", "created": 1749083518.887892, "msecs": 887.0, "relativeCreated": 15580.11770248413, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 0.0002212049439549446, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_intervention_recommendations", "lineno": 190, "outcome": "passed", "keywords": ["test_intervention_recommendations", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0002155248075723648, "outcome": "passed"}, "call": {"duration": 0.01079894695430994, "outcome": "passed", "stdout": "\u2713 Entropy 1.5: none intervention\n\u2713 Entropy 0.4: high intervention\n\u2713 Entropy 0.2: high intervention\n\u2713 Entropy 0.05: immediate intervention\n"}, "teardown": {"duration": 0.00020203366875648499, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_entropy_statistics", "lineno": 234, "outcome": "passed", "keywords": ["test_entropy_statistics", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.0003207670524716377, "outcome": "passed"}, "call": {"duration": 0.049325806088745594, "outcome": "passed", "stdout": "\u2713 Entropy statistics: {'total_agents_tracked': 4, 'healthy_agents': 2, 'at_risk_agents': 1, 'collapsed_agents': 1, 'average_entropy': np.float64(0.6749999999999999), 'average_collapse_risk': np.float64(0.4), 'agents_needing_intervention': ['agent_3']}\n"}, "teardown": {"duration": 0.00027930596843361855, "outcome": "passed"}}, {"nodeid": "tests/core/test_entropy_aware_selector.py::test_fake_always_healthy", "lineno": 273, "outcome": "passed", "keywords": ["test_fake_always_healthy", "test_entropy_aware_selector.py", "core", "tests", "rl_commons", ""], "setup": {"duration": 0.00026333611458539963, "outcome": "passed"}, "call": {"duration": 0.013310099951922894, "outcome": "passed", "stdout": "\u274c HONEYPOT TEST PASSED - This indicates a problem!\n"}, "teardown": {"duration": 0.0002548759803175926, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimizer_initialization", "lineno": 16, "outcome": "passed", "keywords": ["test_optimizer_initialization", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0009670299477875233, "outcome": "passed"}, "call": {"duration": 0.005986826028674841, "outcome": "passed"}, "teardown": {"duration": 0.0002199350856244564, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_state_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_state_creation", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00024363631382584572, "outcome": "passed"}, "call": {"duration": 0.012513583060353994, "outcome": "passed"}, "teardown": {"duration": 0.0002293153665959835, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_parameter_normalization", "lineno": 55, "outcome": "passed", "keywords": ["test_parameter_normalization", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.000245475210249424, "outcome": "passed"}, "call": {"duration": 0.0003829076886177063, "outcome": "passed"}, "teardown": {"duration": 0.00021367426961660385, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_optimization_step", "lineno": 76, "outcome": "passed", "keywords": ["test_optimization_step", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00024031521752476692, "outcome": "passed"}, "call": {"duration": 0.014037854969501495, "outcome": "passed"}, "teardown": {"duration": 0.0002697859890758991, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_calculation", "lineno": 106, "outcome": "passed", "keywords": ["test_reward_calculation", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002723550423979759, "outcome": "passed"}, "call": {"duration": 0.015695529989898205, "outcome": "passed"}, "teardown": {"duration": 0.00026072515174746513, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_reward_with_degradation", "lineno": 142, "outcome": "failed", "keywords": ["test_reward_with_degradation", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002549649216234684, "outcome": "passed"}, "call": {"duration": 0.01227754820138216, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/integrations/test_arangodb_optimizer.py", "lineno": 174, "message": "AssertionError: assert np.float64(0.2946666666666667) < 0\n +  where np.float64(0.2946666666666667) = RLReward(value=np.float64(0.2946666666666667), components={'latency': np.float64(0.33333333333333326), 'throughput': np.float64(0.6000000000000001), 'resources': -0.2499999999999999, 'errors': -0.05, 'cache': 0.21}).value"}, "longrepr": "E   AssertionError: assert np.float64(0.2946666666666667) < 0\n     +  where np.float64(0.2946666666666667) = RLReward(value=np.float64(0.2946666666666667), components={'latency': np.float64(0.33333333333333326), 'throughput': np.float64(0.6000000000000001), 'resources': -0.2499999999999999, 'errors': -0.05, 'cache': 0.21}).value"}, "teardown": {"duration": 0.0002773059532046318, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_full_optimization_loop", "lineno": 179, "outcome": "failed", "keywords": ["test_full_optimization_loop", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00023593520745635033, "outcome": "passed"}, "call": {"duration": 0.020105332136154175, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/integrations/test_arangodb_optimizer.py", "lineno": 225, "message": "assert 0 > 0"}, "longrepr": "E   assert 0 > 0"}, "teardown": {"duration": 0.00024293502792716026, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::TestArangoDBOptimizer::test_save_load_model", "lineno": 226, "outcome": "passed", "keywords": ["test_save_load_model", "TestArangoDBOptimizer", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00022862479090690613, "outcome": "passed"}, "call": {"duration": 0.03736507473513484, "outcome": "passed"}, "teardown": {"duration": 0.0003208373673260212, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_arangodb_optimizer.py::test_integration_validation", "lineno": 261, "outcome": "passed", "keywords": ["test_integration_validation", "test_arangodb_optimizer.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00026524579152464867, "outcome": "passed"}, "call": {"duration": 0.01673678169026971, "outcome": "passed", "stdout": "============================================================\n\ud83e\uddea ARANGODB OPTIMIZER VALIDATION\n============================================================\n\n\ud83d\udccb Test 1: Basic optimizer functionality\n\u2705 PASS\n\n\ud83d\udccb Test 2: Reward calculation\n\u2705 PASS\n\n============================================================\nTotal: 2, Passed: 2, Failed: 0\n\n\u2705 ALL TESTS PASSED\n"}, "teardown": {"duration": 0.0002632248215377331, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_registration", "lineno": 24, "outcome": "passed", "keywords": ["test_module_registration", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00026595499366521835, "outcome": "passed"}, "call": {"duration": 0.0005246107466518879, "outcome": "passed"}, "teardown": {"duration": 0.0002596951089799404, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_orchestrator_creation", "lineno": 48, "outcome": "passed", "keywords": ["test_orchestrator_creation", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00029129674658179283, "outcome": "passed"}, "call": {"duration": 0.004645318258553743, "outcome": "passed"}, "teardown": {"duration": 0.00022101402282714844, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_module_state_update", "lineno": 69, "outcome": "passed", "keywords": ["test_module_state_update", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00024438509717583656, "outcome": "passed"}, "call": {"duration": 0.0039803339168429375, "outcome": "passed"}, "teardown": {"duration": 0.0002140747383236885, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_request_routing", "lineno": 95, "outcome": "passed", "keywords": ["test_request_routing", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00022522499784827232, "outcome": "passed"}, "call": {"duration": 0.004544735886156559, "outcome": "passed"}, "teardown": {"duration": 0.0002244953066110611, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_performance_tracking", "lineno": 145, "outcome": "failed", "keywords": ["test_performance_tracking", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00021853530779480934, "outcome": "passed"}, "call": {"duration": 0.0036658961325883865, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 170, "message": "TypeError: RLReward.__init__() got an unexpected keyword argument 'context'"}, "longrepr": "E   TypeError: RLReward.__init__() got an unexpected keyword argument 'context'"}, "teardown": {"duration": 0.00018794415518641472, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_objective_orchestration", "lineno": 185, "outcome": "passed", "keywords": ["test_multi_objective_orchestration", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019548367708921432, "outcome": "passed"}, "call": {"duration": 0.0029614618979394436, "outcome": "passed"}, "teardown": {"duration": 0.00018136389553546906, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_should_rebalance", "lineno": 201, "outcome": "failed", "keywords": ["test_should_rebalance", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002028942108154297, "outcome": "passed"}, "call": {"duration": 0.003926123026758432, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/integrations/test_module_communicator_integration.py", "lineno": 231, "message": "assert False\n +  where False = should_rebalance()\n +    where should_rebalance = <rl_commons.integrations.module_communicator.ModuleOrchestrator object at 0x746afdb0d0d0>.should_rebalance"}, "longrepr": "E   assert False\n     +  where False = should_rebalance()\n     +    where should_rebalance = <rl_commons.integrations.module_communicator.ModuleOrchestrator object at 0x746afdb0d0d0>.should_rebalance"}, "teardown": {"duration": 0.00022054370492696762, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_async_request_handling", "lineno": 242, "outcome": "skipped", "keywords": ["test_async_request_handling", "asyncio", "pytestmark", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00020698504522442818, "outcome": "passed"}, "call": {"duration": 0.0003203367814421654, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py', 149, 'Skipped: async def function and no async plugin installed (see warnings)')"}, "teardown": {"duration": 0.0002485751174390316, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_curriculum_creation", "lineno": 276, "outcome": "failed", "keywords": ["test_curriculum_creation", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00020911497995257378, "outcome": "passed"}, "call": {"duration": 0.0014838711358606815, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/integrations/test_module_communicator_integration.py", "lineno": 286, "message": "AttributeError: 'ProgressiveCurriculum' object has no attribute 'current_task'. Did you mean: 'current_task_idx'?"}, "longrepr": "E   AttributeError: 'ProgressiveCurriculum' object has no attribute 'current_task'. Did you mean: 'current_task_idx'?"}, "teardown": {"duration": 0.0002328353002667427, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_multi_agent_setup", "lineno": 289, "outcome": "failed", "keywords": ["test_multi_agent_setup", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00021069496870040894, "outcome": "passed"}, "call": {"duration": 0.00043641915544867516, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 488, "message": "TypeError: Can't instantiate abstract class MARLEnvironment without an implementation for abstract methods 'reset', 'step'"}, "longrepr": "E   TypeError: Can't instantiate abstract class MARLEnvironment without an implementation for abstract methods 'reset', 'step'"}, "teardown": {"duration": 0.00019047409296035767, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_gnn_orchestrator", "lineno": 300, "outcome": "passed", "keywords": ["test_gnn_orchestrator", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019885413348674774, "outcome": "passed"}, "call": {"duration": 0.004803510848432779, "outcome": "passed"}, "teardown": {"duration": 0.00018369266763329506, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleCommunicatorIntegration::test_integration_statistics", "lineno": 310, "outcome": "failed", "keywords": ["test_integration_statistics", "TestModuleCommunicatorIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019653374329209328, "outcome": "passed"}, "call": {"duration": 0.004043875262141228, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 664, "message": "AttributeError: 'ProgressiveCurriculum' object has no attribute 'current_task'. Did you mean: 'current_task_idx'?"}, "longrepr": "E   AttributeError: 'ProgressiveCurriculum' object has no attribute 'current_task'. Did you mean: 'current_task_idx'?"}, "teardown": {"duration": 0.0002130451612174511, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_to_features", "lineno": 335, "outcome": "passed", "keywords": ["test_to_features", "TestModuleState", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.0002063852734863758, "outcome": "passed"}, "call": {"duration": 0.00028536608442664146, "outcome": "passed"}, "teardown": {"duration": 0.00017533404752612114, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleState::test_is_available", "lineno": 358, "outcome": "passed", "keywords": ["test_is_available", "TestModuleState", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00022525480017066002, "outcome": "passed"}, "call": {"duration": 0.0002462049014866352, "outcome": "passed"}, "teardown": {"duration": 0.00017733406275510788, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestModuleRequest::test_matches_capabilities", "lineno": 391, "outcome": "passed", "keywords": ["test_matches_capabilities", "TestModuleRequest", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019461428746581078, "outcome": "passed"}, "call": {"duration": 0.0002485746517777443, "outcome": "passed"}, "teardown": {"duration": 0.00017414288595318794, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_e2e_pdf_processing_pipeline", "lineno": 428, "outcome": "failed", "keywords": ["test_e2e_pdf_processing_pipeline", "TestE2EIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019070366397500038, "outcome": "passed"}, "call": {"duration": 0.0038704308681190014, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/integrations/module_communicator.py", "lineno": 170, "message": "TypeError: RLReward.__init__() got an unexpected keyword argument 'context'"}, "longrepr": "E   TypeError: RLReward.__init__() got an unexpected keyword argument 'context'"}, "teardown": {"duration": 0.00018702400848269463, "outcome": "passed"}}, {"nodeid": "tests/integrations/test_module_communicator_integration.py::TestE2EIntegration::test_algorithm_switching", "lineno": 527, "outcome": "passed", "keywords": ["test_algorithm_switching", "TestE2EIntegration", "test_module_communicator_integration.py", "integrations", "tests", "rl_commons", ""], "setup": {"duration": 0.00019254395738244057, "outcome": "passed"}, "call": {"duration": 0.004217868205159903, "outcome": "passed", "log": [{"name": "rl_commons.core.algorithm_selector", "msg": "Performance declining for DQN_1749083519: 80.00 -> 21.00", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/core/algorithm_selector.py", "filename": "algorithm_selector.py", "module": "algorithm_selector", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 599, "funcName": "should_switch_algorithm", "created": 1749083519.2284896, "msecs": 228.0, "relativeCreated": 15920.71533203125, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 0.00019018398597836494, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_ppo_entropy_tracking", "lineno": 48, "outcome": "failed", "keywords": ["test_ppo_entropy_tracking", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.0007767262868583202, "outcome": "passed"}, "call": {"duration": 0.7327312701381743, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 128, "message": "AssertionError: Entropy didn't decrease: 1.454985296726227 -> 1.5323467254638672\nassert np.float64(1.5323467254638672) < np.float64(1.454985296726227)"}, "longrepr": "E   AssertionError: Entropy didn't decrease: 1.454985296726227 -> 1.5323467254638672\n    assert np.float64(1.5323467254638672) < np.float64(1.454985296726227)"}, "teardown": {"duration": 0.000349587295204401, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_collapse_detection", "lineno": 136, "outcome": "failed", "keywords": ["test_collapse_detection", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00031294627115130424, "outcome": "passed"}, "call": {"duration": 0.03763817064464092, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 177, "message": "assert np.float64(0.6469530784557748) > 0.8\n +  where np.float64(0.6469530784557748) = EntropyMetrics(current=0.11972837270466906, mean=np.float64(0.1469808627303718), std=np.float64(0.01634653728502427), ...21142), max=np.float64(0.19914186750295432), trend=0.0005608104292747789, collapse_risk=np.float64(0.6469530784557748)).collapse_risk"}, "stdout": "Collapse detected at step 45, entropy=0.458\nCollapse detected at step 45, entropy=0.397\nCollapse detected at step 45, entropy=0.335\nCollapse detected at step 45, entropy=0.273\nCollapse detected at step 45, entropy=0.212\nCollapse detected at step 45, entropy=0.139\nCollapse detected at step 45, entropy=0.121\nCollapse detected at step 45, entropy=0.143\nCollapse detected at step 45, entropy=0.152\nCollapse detected at step 45, entropy=0.164\nCollapse detected at step 45, entropy=0.132\nCollapse detected at step 45, entropy=0.139\nCollapse detected at step 45, entropy=0.154\nCollapse detected at step 45, entropy=0.161\nCollapse detected at step 45, entropy=0.154\nCollapse detected at step 45, entropy=0.147\nCollapse detected at step 45, entropy=0.135\nCollapse detected at step 45, entropy=0.168\nCollapse detected at step 45, entropy=0.174\nCollapse detected at step 45, entropy=0.138\nCollapse detected at step 45, entropy=0.141\nCollapse detected at step 45, entropy=0.164\nCollapse detected at step 45, entropy=0.153\nCollapse detected at step 45, entropy=0.162\nCollapse detected at step 45, entropy=0.155\nCollapse detected at step 45, entropy=0.158\nCollapse detected at step 45, entropy=0.142\nCollapse detected at step 45, entropy=0.110\nCollapse detected at step 45, entropy=0.154\nCollapse detected at step 45, entropy=0.164\nCollapse detected at step 45, entropy=0.156\nCollapse detected at step 45, entropy=0.135\nCollapse detected at step 45, entropy=0.138\nCollapse detected at step 45, entropy=0.199\nCollapse detected at step 45, entropy=0.157\nCollapse detected at step 45, entropy=0.103\nCollapse detected at step 45, entropy=0.139\nCollapse detected at step 45, entropy=0.146\nCollapse detected at step 45, entropy=0.125\nCollapse detected at step 45, entropy=0.147\nCollapse detected at step 45, entropy=0.140\nCollapse detected at step 45, entropy=0.154\nCollapse detected at step 45, entropy=0.144\nCollapse detected at step 45, entropy=0.136\nCollapse detected at step 45, entropy=0.143\nCollapse detected at step 45, entropy=0.167\nCollapse detected at step 45, entropy=0.151\nCollapse detected at step 45, entropy=0.146\nCollapse detected at step 45, entropy=0.157\nCollapse detected at step 45, entropy=0.150\nCollapse detected at step 45, entropy=0.128\nCollapse detected at step 45, entropy=0.164\nCollapse detected at step 45, entropy=0.138\nCollapse detected at step 45, entropy=0.143\nCollapse detected at step 45, entropy=0.120\n", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 45! Entropy dropped from 2.0245 to 0.4583", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749083519.9901855, "msecs": 990.0, "relativeCreated": 16682.411193847656, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}], "longrepr": "E   assert np.float64(0.6469530784557748) > 0.8\n     +  where np.float64(0.6469530784557748) = EntropyMetrics(current=0.11972837270466906, mean=np.float64(0.1469808627303718), std=np.float64(0.01634653728502427), ...21142), max=np.float64(0.19914186750295432), trend=0.0005608104292747789, collapse_risk=np.float64(0.6469530784557748)).collapse_risk"}, "teardown": {"duration": 0.0002487446181476116, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_fake_constant_entropy", "lineno": 181, "outcome": "failed", "keywords": ["test_fake_constant_entropy", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.0002088751643896103, "outcome": "passed"}, "call": {"duration": 0.027269273065030575, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 200, "message": "AssertionError: HONEYPOT FAILED: Entropy has unrealistic zero variance\nassert np.float64(0.0) > 0.01\n +  where np.float64(0.0) = EntropyMetrics(current=1.5, mean=np.float64(1.5), std=np.float64(0.0), min=np.float64(1.5), max=np.float64(1.5), trend=-1.72849331418309e-17, collapse_risk=np.float64(5.7616443806103e-17)).std"}, "longrepr": "E   AssertionError: HONEYPOT FAILED: Entropy has unrealistic zero variance\n    assert np.float64(0.0) > 0.01\n     +  where np.float64(0.0) = EntropyMetrics(current=1.5, mean=np.float64(1.5), std=np.float64(0.0), min=np.float64(1.5), max=np.float64(1.5), trend=-1.72849331418309e-17, collapse_risk=np.float64(5.7616443806103e-17)).std"}, "teardown": {"duration": 0.00022066477686166763, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_metrics_calculation", "lineno": 206, "outcome": "passed", "keywords": ["test_entropy_metrics_calculation", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00020447373390197754, "outcome": "passed"}, "call": {"duration": 0.0030335141345858574, "outcome": "passed", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 8! Entropy dropped from 2.0000 to 0.4000", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749083520.0436783, "msecs": 43.0, "relativeCreated": 16735.90397834778, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 0.00017533265054225922, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_recovery_recommendations", "lineno": 225, "outcome": "failed", "keywords": ["test_recovery_recommendations", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.0001939539797604084, "outcome": "passed"}, "call": {"duration": 0.0015950631350278854, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 246, "message": "AssertionError: assert 'below healthy threshold' in 'High collapse risk! Consider: 1) Reduce learning rate, 2) Add entropy bonus, 3) Increase exploration'"}, "longrepr": "E   AssertionError: assert 'below healthy threshold' in 'High collapse risk! Consider: 1) Reduce learning rate, 2) Add entropy bonus, 3) Increase exploration'"}, "teardown": {"duration": 0.00018399441614747047, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_entropy_persistence", "lineno": 250, "outcome": "passed", "keywords": ["test_entropy_persistence", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00020248396322131157, "outcome": "passed"}, "call": {"duration": 0.015836392994970083, "outcome": "passed", "log": [{"name": "rl_commons.monitoring.entropy_tracker", "msg": "Entropy collapse detected at step 49! Entropy dropped from 2.0822 to 0.3838", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/monitoring/entropy_tracker.py", "filename": "entropy_tracker.py", "module": "entropy_tracker", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 123, "funcName": "update", "created": 1749083520.0636775, "msecs": 63.0, "relativeCreated": 16755.903244018555, "thread": 128010655555904, "threadName": "MainThread", "processName": "MainProcess", "process": 851809, "taskName": null}]}, "teardown": {"duration": 0.0001856740564107895, "outcome": "passed"}}, {"nodeid": "tests/monitoring/test_entropy_tracker.py::test_real_ppo_integration", "lineno": 283, "outcome": "failed", "keywords": ["test_real_ppo_integration", "test_entropy_tracker.py", "monitoring", "tests", "rl_commons", ""], "setup": {"duration": 0.00020624371245503426, "outcome": "passed"}, "call": {"duration": 0.0002941056154668331, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/rl_commons/tests/monitoring/test_entropy_tracker.py", "lineno": 289, "message": "ImportError: cannot import name 'PPOConfig' from 'rl_commons.algorithms.ppo.ppo' (/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/ppo/ppo.py)"}, "longrepr": "E   ImportError: cannot import name 'PPOConfig' from 'rl_commons.algorithms.ppo.ppo' (/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/ppo/ppo.py)"}, "teardown": {"duration": 0.0004300391301512718, "outcome": "passed"}}], "warnings": [{"message": "Expected None, but tests/algorithms/a3c/test_a3c_simple.py::test_a3c_components returned 0, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "The optimal value found for dimension 0 of parameter k2__noise_level is close to the specified lower bound 1e-05. Decreasing the bound and calling fit again may find a better value.", "category": "ConvergenceWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/sklearn/gaussian_process/kernels.py", "lineno": 442}, {"message": "The optimal value found for dimension 0 of parameter k2__noise_level is close to the specified lower bound 1e-05. Decreasing the bound and calling fit again may find a better value.", "category": "ConvergenceWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/sklearn/gaussian_process/kernels.py", "lineno": 442}, {"message": "Using backward() with create_graph=True will create a reference cycle between the parameter and its gradient which can cause a memory leak. We recommend using autograd.grad when creating the graph to avoid this. If you have to use this function, make sure to reset the .grad fields of your parameters to None after use to break the cycle and avoid the leak. (Triggered internally at /pytorch/torch/csrc/autograd/engine.cpp:1273.)", "category": "UserWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/torch/autograd/graph.py", "lineno": 824}, {"message": "The optimal value found for dimension 0 of parameter k2__noise_level is close to the specified lower bound 1e-05. Decreasing the bound and calling fit again may find a better value.", "category": "ConvergenceWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/sklearn/gaussian_process/kernels.py", "lineno": 442}, {"message": "Expected None, but tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_module_graph_forward returned {'duration': 0.01630544662475586, 'num_modules': 10, 'num_edges': 28, 'embedding_dim': 128, 'forward_time': 0.01630544662475586, 'graph_stats': {'num_nodes': 10, 'num_edges': 28, 'density': 0.3111111111111111, 'avg_degree': np.float64(5.6), 'max_degree': 8, 'min_degree': 2, 'num_updates': 24}}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/gnn/test_gnn_integration.py::TestGNNIntegration::test_dynamic_graph returned {'duration': 0.003423929214477539, 'modules_added': 38, 'modules_removed': 10, 'edges_modified': 103, 'final_num_nodes': 28, 'final_num_edges': 128, 'graph_density': 0.1693121693121693, 'avg_degree': np.float64(9.142857142857142), 'total_updates': 173, 'avg_update_time': np.float64(4.175049918038505e-05), 'max_update_time': np.float64(0.00013375282287597656)}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestMaxEntropyIRL::test_learn_module_routing returned {'duration': 1.254467487335205, 'avg_accuracy': 0.24000000953674316, 'std_accuracy': 0.038873016448557444, 'avg_reward': 35.47467727661133, 'training_iterations': 50, 'final_loss': -2061.974853515625}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestBehavioralCloning::test_imitate_routing_policy returned {'duration': 1.9466702938079834, 'train_accuracy': 0.55, 'val_accuracy': 0.4708333333333333, 'test_accuracy': 0.56, 'final_train_loss': 0.9292154590288798, 'epochs_trained': 50}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestHoneypot::test_wrong_action_space returned {'status': 'FAKE', 'reason': 'Wrong action space should fail'}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Mean of empty slice.", "category": "RuntimeWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/numpy/_core/fromnumeric.py", "lineno": 3860}, {"message": "invalid value encountered in scalar divide", "category": "RuntimeWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/numpy/_core/_methods.py", "lineno": 145}, {"message": "Expected None, but tests/algorithms/irl/test_irl.py::TestHoneypot::test_empty_demonstrations returned {'status': 'FAKE', 'reason': 'Empty demonstrations should fail'}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/marl/test_coordination.py::TestMultiAgentCoordination::test_agent_communication returned {'duration': 0.0036695003509521484, 'num_agents': 4, 'messages_sent': 20, 'messages_received': 130, 'broadcast_messages': 10, 'burst_sent': 100, 'burst_dropped': 0, 'burst_duration': 0.000171661376953125, 'total_messages': 130, 'total_dropped': 0, 'drop_rate': 0.0}, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /pytorch/torch/csrc/utils/tensor_new.cpp:254.)", "category": "UserWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/src/rl_commons/algorithms/meta/maml.py", "lineno": 326}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_as_objective returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_pareto_with_entropy returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_weight_adaptation returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_entropy_preference_balance returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/algorithms/morl/test_entropy_aware_morl.py::test_metrics_reporting returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_entropy_aware_selection returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_entropy_health_tracking returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_algorithm_switching returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_intervention_recommendations returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/core/test_entropy_aware_selector.py::test_entropy_statistics returned True, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "Expected None, but tests/integrations/test_arangodb_optimizer.py::test_integration_validation returned 0, which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?", "category": "PytestReturnNotNoneWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 163}, {"message": "async def functions are not natively supported and have been skipped.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted", "category": "PytestUnhandledCoroutineWarning", "when": "runtest", "filename": "/home/graham/workspace/experiments/rl_commons/.venv/lib/python3.12/site-packages/_pytest/python.py", "lineno": 148}]}